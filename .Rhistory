## Load cost and epi estimates
CostList <- readRDS('CostList.rds')
DeathList <- readRDS('DeathList.rds')
HospList <- readRDS('HospList.rds')
IncidenceList <- readRDS('IncidenceList.rds')
## Reduce size of files by dropping most draws from the distributions. Since some costs only have a single 0 element simply selecting 1:trim produces many NAs
trim <- 10000
CostList <- CostList %>% map_depth(4,~.x[1:min(trim,length(.x))])
DeathList <- DeathList %>% map_depth(3,~.x[1:min(trim,length(.x))])
HospList <- HospList %>% map_depth(3,~.x[1:min(trim,length(.x))])
IncidenceList <- IncidenceList %>% map_depth(3,~.x[1:min(trim,length(.x))])
## Load attribution proportions
ndraws <- length(CostList[[1]][[1]][[1]][[1]])
loadAttrProps <- function(ndraws){
Attr <- readxl::read_excel('Data/AttributionProportions.xlsx',sheet = 'Gamma parameters') %>%
mutate(across(c(shape, rate), .f  = ~as.numeric(na_if(.x, "NA")))) %>%
mutate(Commodity = gsub('.', ' ', Commodity, fixed = TRUE)) %>% #tidying up commodity names to remove any periods
drop_na
Attr <- Attr %>% group_by(Pathogen, Commodity) %>%
group_map_named(~{#print(1 - pgamma(1, shape = .x$shape, rate  = .x$rate))
rgamma(ndraws, shape = .x$shape, rate  = .x$rate)}) %>%
map(~{.x$AllFood = rep(1,ndraws); .x}) %>%
map(~as.matrix(as.data.frame(.x,check.names = FALSE)))
Attr
}
AttrProps <- loadAttrProps(ndraws)
warning('Code currently does not return an error if the food categories are different for each pathogen. This might be a good thing if future surveys use lsightly different categories, however it could lead to fairly confusing tables and inconsistent sums over categories.')
## Check for missing-ness of cost and/or attribution data and ensure that pathogens have the same order in both
CommonPathogens <- intersect(names(AttrProps), names(CostList))
MissingPathogens <- setdiff(names(CostList), names(AttrProps))
if(length(MissingPathogens)){
warning('Attribution data is not available for some pathogens for which cost data is available:\n', paste0(MissingPathogens,col = ',\n'))
}
ExtraPathogens <- setdiff(names(AttrProps),names(CostList))
if(length(ExtraPathogens)){
warning('Cost data is not available for some pathogens for which attribution data is available:\n', paste0(ExtraPathogens,col = ',\n'))
}
CostList <- CostList[CommonPathogens]
AttrProps <- AttrProps[CommonPathogens]
IncidenceList <- IncidenceList[CommonPathogens]
HospList <- HospList[CommonPathogens]
DeathList <- DeathList[CommonPathogens]
EpiList <- list(Cases = IncidenceList, Hospitalisations = HospList, Deaths = DeathList)
rm(IncidenceList,HospList,DeathList)
##Attributed costs, cases, etc.
CostList <- map2(CostList, AttrProps,
function(.c, .a){
map_depth(.c, 3, ~{as.list(as.data.frame(.x * .a))})
}
)
EpiList <- map(EpiList,~{
map2(.x,AttrProps,
function(.e,.a){
map_depth(.e,2,
function(.n){as.list(as.data.frame(.n * .a))}
)}
)}
)
#rectangualrise the nested lists
CostList <- CostList %>% rectangle(names_to = c("Pathogen", "Disease",'Agegroup', "CostItem", "Source"), values_to = 'Cost')
EpiList <- EpiList %>% rectangle(names_to = c("Measure","Pathogen", "Disease",'Agegroup', "Source"), values_to = 'Count')
#collapse the detailed cost categories to the categories
DirectCat <- c('GPSpecialist','ED','Hospitalisation','Tests','Medications')
WTPCat <- c('WTP', 'WTPOngoing')
CostList <- CostList %>%
mutate(CostCategory  = case_when(CostItem %in% DirectCat ~ 'Direct',
CostItem %in% WTPCat ~ 'WTP',
TRUE ~ CostItem)) %>%
group_by(across(-c(CostItem, Cost))) %>%
summarise(Cost = list(reduce(Cost, `+`)))
#change specific initial illness names all to 'initial'
CostList <- CostList %>% mutate(Disease = ifelse(Disease %in% names(SequelaeAssumptions), Disease, 'Initial'))
EpiList <- EpiList %>% mutate(Disease = ifelse(Disease %in% names(SequelaeAssumptions), Disease, 'Initial'))
#Make totals across agegroups, pathogens and diseases and then calculate quantiles
group_cols <- list(Pathogen = 'All pathogens', Agegroup = 'All ages', `Disease` = 'Initial and sequel disease')
CostList <- CostList %>% appendGroupTotals('Cost', group_cols) %>% quantileListColumn('Cost') %>% rename(median = `50%`)
EpiList <- EpiList %>% appendGroupTotals('Count',group_cols) %>% quantileListColumn('Count') %>% rename(median = `50%`)
#Epi tables
EpiList %>%
subset(Pathogen == 'All pathogens'  & Disease == "Initial and sequel disease") %>%
ungroup %>%
group_by(Measure) %>%
group_walk(~{ .x %>%
rename(X5. = '5%', X95. = '95%') %>%
medianCIformat(unit = 1) %>%
select(Agegroup, Source, Count = Cost) %>%
pivot_wider(names_from = Agegroup, values_from = Count) %>%
mutate(Source = factor(Source) %>% fct_relevel('AllFood', after = Inf)) %>%
arrange(Source) %>%
write_excel_csv(paste('AttributionReport/EpiTable',
paste(.y,collapse = '.'),
'csv',sep = '.'))
})
#Cost tables
CostList %>%
subset(CostCategory == "TotalHumanCapital" & Disease == "Initial and sequel disease") %>%
group_by(Pathogen) %>%
group_walk(~{.x %>%
rename(X5. = '5%', X95. = '95%') %>%
medianCIformat() %>%
select(Agegroup, Source, Cost) %>%
pivot_wider(names_from = Agegroup, values_from = Cost) %>%
mutate(Source = factor(Source) %>% fct_relevel('AllFood', after = Inf)) %>%
arrange(Source) %>%
write_excel_csv(paste('AttributionReport/CostTable',
paste(.y,collapse = '.'),
'csv',sep = '.'))
})
#Order Food by cost
FoodCatOrdered <- CostList %>% subset(Pathogen == 'All pathogens' &
CostCategory == 'TotalHumanCapital' &
Agegroup == 'All ages' &
Disease == "Initial and sequel disease") %>%
arrange(median) %>% `[`(,'Source', drop = TRUE)
#Combine the summary data for cost and epi
CombinedSummaries <- EpiList %>% ungroup %>%
mutate(median = ifelse(Measure == 'Cases', median/1000, median)) %>%
bind_rows(CostList %>% ungroup %>%
subset(CostCategory == 'TotalHumanCapital') %>%
select(-CostCategory) %>%
mutate(Measure = 'Cost')
) %>%
subset(Disease == "Initial and sequel disease" &
Agegroup == 'All ages' &
Pathogen != 'All pathogens') %>%
mutate(SourceCat = if_else(Source == 'AllFood', 'All Food', "Individual Items"),
#Source = factor(Source,FoodCatOrderedCases),
Source = factor(Source,FoodCatOrdered),
Source = recode(Source, AllFood = 'All Food'),
Source = fct_relevel(Source, 'Other', after = 0)
)
P.CostProp <- CombinedSummaries %>%
subset(Measure == "Cost") %>%
ggplot(aes(x = Source,
y = median * 10^-6,
fill = Pathogen,
label = round(median * 10^-6))) +
geom_bar(stat = 'identity') +
xlab('Food product') +
ylab('Annual cost (millions AUD)') +
coord_flip() +
ggh4x::facet_grid2("SourceCat", scales = 'free',space = 'free_y', independent = 'x',switch = 'both') +
theme(legend.position = c(0.70, 0.25),
strip.text.y = element_blank())
P.CostProp
ggsave(filename = 'AttributionReport/CostBySourcePathogen.png',P.CostProp)
P.EpiProp <- CombinedSummaries %>%
mutate(median = if_else(Measure == 'Cases', median/1000,
if_else(Measure == "Costs", median/1000000, median))) %>%
mutate(Measure = recode(Measure,
Cases = 'Cases (thousands)',
Cost = 'Cost (millions AUD)')) %>%
mutate(Measure = factor(Measure, levels = c('Cases (thousands)', 'Hospitalisations', "Deaths",
'Cost (millions AUD)'))) %>%
ggplot(aes(x = Source,
y = median,
fill = Pathogen,
label = round(median/10^6))) +
geom_bar(stat = 'identity') +
xlab('Food product') +
ylab('') +
coord_flip() +
ggh4x::facet_grid2(SourceCat~Measure, scales = 'free',space = 'free_y', independent = 'x',switch = 'both') +
theme(legend.position = 'bottom', legend.direction = 'horizontal',
#legend.position = c(0.9,0.125),
strip.placement = 'outside',
strip.text.y = element_blank(),
strip.background.x = element_rect('white'))
P.EpiProp
ggsave(filename = 'AttributionReport/EpiBySourcePathogen.png',P.EpiProp, width = 11)
CombinedSummaries %>% select(-c(`5%`,`95%`)) %>% subset(Measure == "Cost")
CombinedSummaries %>% select(-c(`5%`,`95%`)) %>%
pivot_wider(names_from = Measure, values_from = median, values_fn = length)
CombinedSummaries %>% select(-c(`5%`,`95%`)) %>%
pivot_wider(names_from = Measure, values_from = median)
CombinedSummaries %>% select(-c(`5%`,`95%`)) %>%
pivot_wider(names_from = Measure, values_from = median) %>%
mutate(CostPerCase = Cost/Cases)
#Combine the summary data for cost and epi
CombinedSummaries <- EpiList %>% ungroup %>%
bind_rows(CostList %>% ungroup %>%
subset(CostCategory == 'TotalHumanCapital') %>%
select(-CostCategory) %>%
mutate(Measure = 'Cost')
) %>%
subset(Disease == "Initial and sequel disease" &
Agegroup == 'All ages' &
Pathogen != 'All pathogens') %>%
mutate(SourceCat = if_else(Source == 'AllFood', 'All Food', "Individual Items"),
#Source = factor(Source,FoodCatOrderedCases),
Source = factor(Source,FoodCatOrdered),
Source = recode(Source, AllFood = 'All Food'),
Source = fct_relevel(Source, 'Other', after = 0)
)
P.CostProp <- CombinedSummaries %>%
subset(Measure == "Cost") %>%
ggplot(aes(x = Source,
y = median * 10^-6,
fill = Pathogen,
label = round(median * 10^-6))) +
geom_bar(stat = 'identity') +
xlab('Food product') +
ylab('Annual cost (millions AUD)') +
coord_flip() +
ggh4x::facet_grid2("SourceCat", scales = 'free',space = 'free_y', independent = 'x',switch = 'both') +
theme(legend.position = c(0.70, 0.25),
strip.text.y = element_blank())
P.CostProp
ggsave(filename = 'AttributionReport/CostBySourcePathogen.png',P.CostProp)
P.EpiProp <- CombinedSummaries %>%
mutate(median = if_else(Measure == 'Cases', median/1000,
if_else(Measure == "Costs", median/1000000, median))) %>%
mutate(Measure = recode(Measure,
Cases = 'Cases (thousands)',
Cost = 'Cost (millions AUD)')) %>%
mutate(Measure = factor(Measure, levels = c('Cases (thousands)', 'Hospitalisations', "Deaths",
'Cost (millions AUD)'))) %>%
ggplot(aes(x = Source,
y = median,
fill = Pathogen,
label = round(median/10^6))) +
geom_bar(stat = 'identity') +
xlab('Food product') +
ylab('') +
coord_flip() +
ggh4x::facet_grid2(SourceCat~Measure, scales = 'free',space = 'free_y', independent = 'x',switch = 'both') +
theme(legend.position = 'bottom', legend.direction = 'horizontal',
#legend.position = c(0.9,0.125),
strip.placement = 'outside',
strip.text.y = element_blank(),
strip.background.x = element_rect('white'))
P.EpiProp
ggsave(filename = 'AttributionReport/EpiBySourcePathogen.png',P.EpiProp, width = 11)
CombinedSummaries %>% select(-c(`5%`,`95%`)) %>%
pivot_wider(names_from = Measure, values_from = median) %>%
mutate(CostPerCase = Cost/Cases)
CombinedSummaries %>% select(-c(`5%`,`95%`)) %>%
pivot_wider(names_from = Measure, values_from = median) %>%
mutate(CostPerCase = Cost/Cases) %>%
subset(Pathogen == "All pathogens")
#Combine the summary data for cost and epi
CombinedSummaries <- EpiList %>% ungroup %>%
bind_rows(CostList %>% ungroup %>%
subset(CostCategory == 'TotalHumanCapital') %>%
select(-CostCategory) %>%
mutate(Measure = 'Cost')
) %>%
subset(Disease == "Initial and sequel disease" &
Agegroup == 'All ages') %>%
mutate(SourceCat = if_else(Source == 'AllFood', 'All Food', "Individual Items"),
#Source = factor(Source,FoodCatOrderedCases),
Source = factor(Source,FoodCatOrdered),
Source = recode(Source, AllFood = 'All Food'),
Source = fct_relevel(Source, 'Other', after = 0)
)
P.CostProp <- CombinedSummaries %>%
subset(Measure == "Cost" &
Pathogen != 'All pathogens') %>%
ggplot(aes(x = Source,
y = median * 10^-6,
fill = Pathogen,
label = round(median * 10^-6))) +
geom_bar(stat = 'identity') +
xlab('Food product') +
ylab('Annual cost (millions AUD)') +
coord_flip() +
ggh4x::facet_grid2("SourceCat", scales = 'free',space = 'free_y', independent = 'x',switch = 'both') +
theme(legend.position = c(0.70, 0.25),
strip.text.y = element_blank())
P.CostProp
P.EpiProp <- CombinedSummaries %>%
subset(Pathogen != 'All pathogens')
P.EpiProp <- CombinedSummaries %>%
subset(Pathogen != 'All pathogens') %>%
mutate(median = if_else(Measure == 'Cases', median/1000,
if_else(Measure == "Costs", median/1000000, median))) %>%
mutate(Measure = recode(Measure,
Cases = 'Cases (thousands)',
Cost = 'Cost (millions AUD)')) %>%
mutate(Measure = factor(Measure, levels = c('Cases (thousands)', 'Hospitalisations', "Deaths",
'Cost (millions AUD)'))) %>%
ggplot(aes(x = Source,
y = median,
fill = Pathogen,
label = round(median/10^6))) +
geom_bar(stat = 'identity') +
xlab('Food product') +
ylab('') +
coord_flip() +
ggh4x::facet_grid2(SourceCat~Measure, scales = 'free',space = 'free_y', independent = 'x',switch = 'both') +
theme(legend.position = 'bottom', legend.direction = 'horizontal',
#legend.position = c(0.9,0.125),
strip.placement = 'outside',
strip.text.y = element_blank(),
strip.background.x = element_rect('white'))
P.EpiProp
CombinedSummaries %>% select(-c(`5%`,`95%`)) %>%
pivot_wider(names_from = Measure, values_from = median) %>%
mutate(CostPerCase = Cost/Cases) %>%
subset(Pathogen == "All pathogens")
CombinedSummaries %>% select(-c(`5%`,`95%`,Pathogen, Agegroup,SourceCat)) %>%
pivot_wider(names_from = Measure, values_from = median) %>%
mutate(CostPerCase = Cost/Cases,
HospitalisationsPerCase = Hospitalisations/Cases,
DeathsPerCase = Deaths/Cases) %>%
subset(Pathogen == "All pathogens")
CombinedSummaries %>% select(-c(`5%`,`95%`,Agegroup,SourceCat)) %>%
pivot_wider(names_from = Measure, values_from = median) %>%
mutate(CostPerCase = Cost/Cases,
HospitalisationsPerCase = Hospitalisations/Cases,
DeathsPerCase = Deaths/Cases) %>%
subset(Pathogen == "All pathogens")
CombinedSummaries %>% select(-c(`5%`,`95%`,Agegroup,SourceCat,Disease)) %>%
pivot_wider(names_from = Measure, values_from = median) %>%
mutate(CostPerCase = Cost/Cases,
HospitalisationsPerCase = Hospitalisations/Cases,
DeathsPerCase = Deaths/Cases) %>%
subset(Pathogen == "All pathogens")
CombinedSummaries %>% select(-c(`5%`,`95%`,Agegroup,SourceCat,Disease)) %>%
pivot_wider(names_from = Measure, values_from = median) %>%
mutate(CostPerCase = Cost/Cases,
HospitalisationsPerCase = Hospitalisations/Cases,
DeathsPerCase = Deaths/Cases) %>%
subset(Pathogen == "All pathogens") %>%
select(!AllPathogens)
CombinedSummaries %>% select(-c(`5%`,`95%`,Agegroup,SourceCat,Disease)) %>%
pivot_wider(names_from = Measure, values_from = median) %>%
mutate(CostPerCase = Cost/Cases,
HospitalisationsPerCase = Hospitalisations/Cases,
DeathsPerCase = Deaths/Cases) %>%
subset(Pathogen == "All pathogens") %>%
select(!Pathogens)
CombinedSummaries %>% select(-c(`5%`,`95%`,Agegroup,SourceCat,Disease)) %>%
pivot_wider(names_from = Measure, values_from = median) %>%
mutate(CostPerCase = Cost/Cases,
HospitalisationsPerCase = Hospitalisations/Cases,
DeathsPerCase = Deaths/Cases) %>%
subset(Pathogen == "All pathogens") %>%
select(!Pathogen)
CombinedSummaries %>% select(-c(`5%`,`95%`,Agegroup,SourceCat,Disease)) %>%
pivot_wider(names_from = Measure, values_from = median) %>%
mutate(`Cost per case (AUD)` = Cost/Cases,
`Hospitalisations per thousand cases` = Hospitalisations/Cases * 1000,
`Deaths per thousand cases = Deaths/Cases * 1000) %>%
subset(Pathogen == "All pathogens") %>%
select(!Pathogen)
CombinedSummaries %>% select(-c(`5%`,`95%`,Agegroup,SourceCat,Disease)) %>%
pivot_wider(names_from = Measure, values_from = median) %>%
mutate(`Cost per case (AUD)` = Cost/Cases,
`Hospitalisations per thousand cases` = Hospitalisations/Cases * 1000,
`Deaths per thousand cases` = Deaths/Cases * 1000) %>%
subset(Pathogen == "All pathogens") %>%
select(!Pathogen)
CombinedSummaries %>% select(-c(`5%`,`95%`,Agegroup,SourceCat,Disease)) %>%
pivot_wider(names_from = Measure, values_from = median) %>%
mutate(`Cost per case (AUD)` = Cost/Cases,
`Hospitalisations per million cases` = Hospitalisations/Cases * 1000,
`Deaths per million cases` = Deaths/Cases * 1000) %>%
subset(Pathogen == "All pathogens") %>%
select(!Pathogen)
CombinedSummaries %>% select(-c(`5%`,`95%`,Agegroup,SourceCat,Disease)) %>%
pivot_wider(names_from = Measure, values_from = median) %>%
mutate(`Cost per case (AUD)` = Cost/Cases,
`Hospitalisations per million cases` = Hospitalisations/Cases * 1000000,
`Deaths per million cases` = Deaths/Cases * 1000000) %>%
subset(Pathogen == "All pathogens") %>%
select(!Pathogen)
CombinedSummaries %>% select(-c(`5%`,`95%`,Agegroup,SourceCat,Disease)) %>%
pivot_wider(names_from = Measure, values_from = median) %>%
mutate(`Cost per case (AUD)` = Cost/Cases,
`Hospitalisations per million cases` = round(Hospitalisations/Cases * 1000000),
`Deaths per million cases` = round(Deaths/Cases * 1000000)) %>%
subset(Pathogen == "All pathogens") %>%
select(!Pathogen)
sf()
signif(1312312313123123,2)
signif(1312312313123123,3)
signif(1312312313123123,4)
signif(1312312,4)
CombinedSummaries %>% select(-c(`5%`,`95%`,Agegroup,SourceCat,Disease)) %>%
pivot_wider(names_from = Measure, values_from = median) %>%
mutate(`Cost per case (AUD)` = signif(Cost/Cases,3),
`Hospitalisations per million cases` = signif(Hospitalisations/Cases * 1000000,3),
`Deaths per million cases` = signif(Deaths/Cases * 1000000),3) %>%
subset(Pathogen == "All pathogens") %>%
select(!Pathogen)
CombinedSummaries %>% select(-c(`5%`,`95%`,Agegroup,SourceCat,Disease)) %>%
pivot_wider(names_from = Measure, values_from = median) %>%
mutate(`Cost per case (AUD)` = signif(Cost/Cases,3),
`Hospitalisations per million cases` = signif(Hospitalisations/Cases * 1000000,3),
`Deaths per million cases` = signif(Deaths/Cases * 1000000),3) %>%
subset(Pathogen == "All pathogens") %>%
select(!c(Pathogen, Cases, Deaths, Hospitalisations)) %>%
arrange(`Cost per case`)
CombinedSummaries %>% select(-c(`5%`,`95%`,Agegroup,SourceCat,Disease)) %>%
pivot_wider(names_from = Measure, values_from = median) %>%
mutate(`Cost per case (AUD)` = signif(Cost/Cases,3),
`Hospitalisations per million cases` = signif(Hospitalisations/Cases * 1000000,3),
`Deaths per million cases` = signif(Deaths/Cases * 1000000),3) %>%
subset(Pathogen == "All pathogens") %>%
select(!c(Pathogen, Cases, Deaths, Hospitalisations))
CombinedSummaries %>% select(-c(`5%`,`95%`,Agegroup,SourceCat,Disease)) %>%
pivot_wider(names_from = Measure, values_from = median) %>%
mutate(`Cost per case (AUD)` = signif(Cost/Cases,3),
`Hospitalisations per million cases` = signif(Hospitalisations/Cases * 1000000,3),
`Deaths per million cases` = signif(Deaths/Cases * 1000000,3)) %>%
subset(Pathogen == "All pathogens") %>%
select(!c(Pathogen, Cases, Deaths, Hospitalisations)) %>%
arrange(`Cost per case`)
CombinedSummaries %>% select(-c(`5%`,`95%`,Agegroup,SourceCat,Disease)) %>%
pivot_wider(names_from = Measure, values_from = median) %>%
mutate(`Cost per case (AUD)` = signif(Cost/Cases,3),
`Hospitalisations per million cases` = signif(Hospitalisations/Cases * 1000000,3),
`Deaths per million cases` = signif(Deaths/Cases * 1000000,3))
CombinedSummaries %>% select(-c(`5%`,`95%`,Agegroup,SourceCat,Disease)) %>%
pivot_wider(names_from = Measure, values_from = median) %>%
mutate(`Cost per case (AUD)` = signif(Cost/Cases,3),
`Hospitalisations per million cases` = signif(Hospitalisations/Cases * 1000000,3),
`Deaths per million cases` = signif(Deaths/Cases * 1000000,3)) %>%
subset(Pathogen == "All pathogens")
CombinedSummaries %>% select(-c(`5%`,`95%`,Agegroup,SourceCat,Disease)) %>%
pivot_wider(names_from = Measure, values_from = median) %>%
mutate(`Cost per case (AUD)` = signif(Cost/Cases,3),
`Hospitalisations per million cases` = signif(Hospitalisations/Cases * 1000000,3),
`Deaths per million cases` = signif(Deaths/Cases * 1000000,3)) %>%
subset(Pathogen == "All pathogens") %>%
select(!c(Pathogen, Cases, Deaths, Hospitalisations))
CombinedSummaries %>% select(-c(`5%`,`95%`,Agegroup,SourceCat,Disease)) %>%
pivot_wider(names_from = Measure, values_from = median) %>%
mutate(`Cost per case (AUD)` = signif(Cost/Cases,3),
`Hospitalisations per million cases` = signif(Hospitalisations/Cases * 1000000,3),
`Deaths per million cases` = signif(Deaths/Cases * 1000000,3)) %>%
subset(Pathogen == "All pathogens") %>%
select(!c(Pathogen, Cases, Deaths, Hospitalisations)) %>%
arrange(`Cost per case`)
help(arrange)
CostPerCase <- CombinedSummaries %>% select(-c(`5%`,`95%`,Agegroup,SourceCat,Disease)) %>%
pivot_wider(names_from = Measure, values_from = median) %>%
mutate(`Cost per case (AUD)` = signif(Cost/Cases,3),
`Hospitalisations per million cases` = signif(Hospitalisations/Cases * 1000000,3),
`Deaths per million cases` = signif(Deaths/Cases * 1000000,3)) %>%
subset(Pathogen == "All pathogens") %>%
select(!c(Pathogen, Cases, Deaths, Hospitalisations))
CostPerCase$`Cost per case (AUD)` %>% class
CostPerCase <- CombinedSummaries %>% select(-c(`5%`,`95%`,Agegroup,SourceCat,Disease)) %>%
pivot_wider(names_from = Measure, values_from = median) %>%
mutate(`Cost per case (AUD)` = signif(Cost/Cases,3),
`Hospitalisations per million cases` = signif(Hospitalisations/Cases * 1000000,3),
`Deaths per million cases` = signif(Deaths/Cases * 1000000,3)) %>%
subset(Pathogen == "All pathogens") %>%
select(!c(Pathogen, Cases, Deaths, Hospitalisations)) %>%
arrange(`Cost per case`)
CombinedSummaries %>% select(-c(`5%`,`95%`,Agegroup,SourceCat,Disease)) %>%
pivot_wider(names_from = Measure, values_from = median) %>%
mutate(`Cost per case (AUD)` = signif(Cost/Cases,3),
`Hospitalisations per million cases` = signif(Hospitalisations/Cases * 1000000,3),
`Deaths per million cases` = signif(Deaths/Cases * 1000000,3)) %>%
subset(Pathogen == "All pathogens") %>%
select(!c(Pathogen, Cases, Deaths, Hospitalisations))
CostPerCase <- CombinedSummaries %>% select(-c(`5%`,`95%`,Agegroup,SourceCat,Disease)) %>%
pivot_wider(names_from = Measure, values_from = median) %>%
mutate(`Cost per case (AUD)` = signif(Cost/Cases,3),
`Hospitalisations per million cases` = signif(Hospitalisations/Cases * 1000000,3),
`Deaths per million cases` = signif(Deaths/Cases * 1000000,3)) %>%
subset(Pathogen == "All pathogens") %>%
select(!c(Pathogen, Cases, Deaths, Hospitalisations)) %>%
arrange(`Cost per case (AUD)`)
CostPerCase
CostPerCase <- CombinedSummaries %>% select(-c(`5%`,`95%`,Agegroup,SourceCat,Disease)) %>%
pivot_wider(names_from = Measure, values_from = median) %>%
mutate(`Cost per case (AUD)` = signif(Cost/Cases,3),
`Hospitalisations per million cases` = signif(Hospitalisations/Cases * 1000000,3),
`Deaths per million cases` = signif(Deaths/Cases * 1000000,3)) %>%
subset(Pathogen == "All pathogens") %>%
select(!c(Pathogen, Cost,Cases, Deaths, Hospitalisations)) %>%
arrange(`Cost per case (AUD)`)
CostPerCase
CostPerCase <- CombinedSummaries %>% select(-c(`5%`,`95%`,Agegroup,SourceCat,Disease)) %>%
pivot_wider(names_from = Measure, values_from = median) %>%
mutate(`Cost per case (AUD)` = signif(Cost/Cases,3),
`Hospitalisations per million cases` = signif(Hospitalisations/Cases * 1000000,3),
`Deaths per million cases` = signif(Deaths/Cases * 1000000,3)) %>%
subset(Pathogen == "All pathogens") %>%
select(!c(Pathogen, Cost, Deaths, Hospitalisations)) %>%
arrange(`Cost per case (AUD)`)
CostPerCase
CostPerCase %>% write.csv('AttributionReport/CostPerCaseByFood.csv')
P.EpiProp <- CombinedSummaries %>%
subset(Pathogen != 'All pathogens') %>%
mutate(median = if_else(Measure == 'Cases', median/1000,
if_else(Measure == "Cost", median/1000000, median))) %>%
mutate(Measure = recode(Measure,
Cases = 'Cases (thousands)',
Cost = 'Cost (millions AUD)')) %>%
mutate(Measure = factor(Measure, levels = c('Cases (thousands)', 'Hospitalisations', "Deaths",
'Cost (millions AUD)'))) %>%
ggplot(aes(x = Source,
y = median,
fill = Pathogen,
label = round(median/10^6))) +
geom_bar(stat = 'identity') +
xlab('Food product') +
ylab('') +
coord_flip() +
ggh4x::facet_grid2(SourceCat~Measure, scales = 'free',space = 'free_y', independent = 'x',switch = 'both') +
theme(legend.position = 'bottom', legend.direction = 'horizontal',
#legend.position = c(0.9,0.125),
strip.placement = 'outside',
strip.text.y = element_blank(),
strip.background.x = element_rect('white'))
P.EpiProp
ggsave(filename = 'AttributionReport/EpiBySourcePathogen.png',P.EpiProp, width = 11)
