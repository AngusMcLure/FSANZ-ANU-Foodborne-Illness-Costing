.id = 'Measure') %>%
subset(!(Disease %in% names(PathogenAssumptions) & Pathogen == 'All Pathogens'))
write.csv(EpiTable,'./Outputs/EpiTable.csv')
CostSummaries <- summariseCostList(CostList)
write.csv(CostSummaries$Detailed,'./Outputs/CostTable.csv')
write.csv(CostSummaries$Categorised,'./Outputs/CostTableCategories.csv')
# save workspace in two versions; one light version to be used by the shiny app
# and another larger version with everything
UnusedLargeObjects <- c('CostList','SequelaeFractions','TotalCostByPathogen',
'TotalIncidence')
save.image('AusFBDiseaseImage.RData')
#trim DeathList, HospList, and IncidenceList down to 1000 draws
trim <- 1000
DeathList <- DeathList %>% map_depth(3,~.x[1:trim])
HospList <- HospList %>% map_depth(3,~.x[1:trim])
IncidenceList <- IncidenceList %>% map_depth(3,~.x[1:trim])
Hospitalisations <- subset(Hospitalisations,
DC4D %in% (map(c(PathogenAssumptions,
SequelaeAssumptions),
~.x$hospCodes) %>%
unlist(use.names = F) %>% unique))
rm(WTP)
WTPValues <- IncidenceList %>% map_depth(2,~.x[1:trim])
WTPValues
str(WTPValues)
WTPValues <- WTPValues %>% map_depth(2,~.x[1:trim])
set.seed(20220218) #Date at time of final run
Year <- 2019
WTPList <- getWTP(ndraws)
WTPList <- WTPList %>% map_depth(2,~.x[1:trim])
str(WTPList)
library(tidyverse)
source("./RFiles/Distributions.R")
source("./RFiles/ClassDefinitions.R")
source("./RFiles/Diseases.R")
source("./RFiles/loadData.R")
source('./RFiles/summaryFunctions.R')
source("./RFiles/estimationFunctions.R")
#Load all the data and assumptions
NNDSSIncidenceAgegroup <- getCasesNNDSSAgeGroup() %>% subset(Disease != "STEC")
StateIncidenceAgeGroup <- getCasesStateAgeGroup()
NotificationsAgeGroup <- bind_rows(NNDSSIncidenceAgegroup,StateIncidenceAgeGroup)
AusPopAgegroup <- getAusPopAgeGroup()
AusPopSingleYear <- getAusPopSingleYearAge()
Hospitalisations <- getHospitalisationsAgeGroup()
Costs <- getCosts()
VSL <- getValueStatisticalLife()
Deaths <- getABSDeaths() %>% subset(Method == "Underlying")
MissedDaysGastro <- getMissedDaysGastro()
FrictionRates <- getFrictionRates()
Workforce <- getWorkforceAssumptions() ##What year is this for and does it need to change by year?
# Draw from all distributions
ndraws <- 10^5
set.seed(20220218) #Date at time of final run
Year <- 2019
WTPList <- getWTP(ndraws)
IncidenceList <- makeIncidenceList(Year,
pathogens = PathogenAssumptions,
ndraws = ndraws,
gastroRate = gastroRate)
SequelaeFractions <- calcSequelaeFractions(IncidenceList)
HospList <- makeHospList(Year,
IncidenceList,
pathogens = PathogenAssumptions,
ndraws = ndraws)
DeathList <- makeDeathList(Year,
pathogens = PathogenAssumptions,
ndraws = ndraws)
CostList <- makeCostList(Year, PathogenAssumptions, ndraws, discount = 0) # no discounting and assuming a 5 year duration of ongoing illness is equivalent to the cross-sectional approach if we assume that case numbers were the same over the past five years.
warning('When summing across agegroups the draws of the multipliers used for each agegroup are considered independent. Making them dependent would require reworking the whole program, and is not necessarily a better assumption, but it is something to be aware of')
#Include `All ages` and `All diseases` sums, calculate median, and 90 CIs, then reformat as data.frame
summariseEpiList <- function(list){
list %>%
map_depth(2,~{.x$`All Ages` <- reduce(.x,`+`);.x}) %>%
map(~{.x$`Initial and Sequel Disease` <- do.call(add,unname(.x));.x}) %>%
quantilesNestedList(3, c("Pathogen", "Disease","AgeGroup"))
}
# Include `All ages` and `All diseases` sums, calculate median, and 90 CIs, then
# reformat as data.frame. Outputs are returned in categorised format (Deaths,
# Human Captial, Direct, WTP) or detailed (Tests, Medications, Hospitalisation...)
summariseCostList <- function(list){
#Add totals for `All Ages` and `All diseases` (aka initial and sequel diseases)
totals <- list %>%
map_depth(2,~{.x$`All Ages` <- do.call(add,unname(.x));.x}) %>%
map(~{.x$`Initial and Sequel Disease` <- do.call(add2,unname(.x));.x})
Detailed <- totals %>% quantilesNestedList(4, c("Pathogen", "Disease","AgeGroup","CostItem"))
DirectCat <- c('GPSpecialist','ED','Hospitalisation','Tests','Medications')
WTPCat <- c('WTP', 'WTPOngoing')
LostProdCat <- c("HumanCapital","FrictionHigh", "FrictionLow")
Categorised <- totals %>%
map_depth(3,~{
.x$Direct <- reduce(.x[DirectCat],`+`) #sum over direct costs
.x$WTP <- reduce(.x[WTPCat],`+`) #sum of WTP and WTP-onging
.x[c("Deaths",LostProdCat, paste0("Total",LostProdCat),"Direct","WTP")] #drop sub-categories
}) %>%
quantilesNestedList(4, c("Pathogen", "Disease","AgeGroup","CostItem"))
list(Categorised = Categorised, Detailed = Detailed)
}
##### Calculate and store selected summaries ##################################
TotalCostByPathogen <- CostList %>%
map_depth(3,~.x$TotalHumanCapital) %>% #Extract out total cost (human capital method)
map_depth(2,~reduce(.x,`+`)) %>% #Sum over age groups
map_depth(1,~reduce(.x,`+`)) #Sum over diseases (initial and sequelae)
TotalIncidence <- IncidenceList %>%
map(~.x[[1]]) %>% #only consider initial infections (drop sequelae counts)
map_depth(1,~reduce(.x,`+`)) #sum over age groups
#Note this includes all sequelae for the purpose of counting costs, but only the initial cases for the purpose of counting cases.
CostPerCase <- map2(TotalCostByPathogen,TotalIncidence,~.x/.y) %>%
quantilesNestedList(1,"Pathogen")
write.csv(CostPerCase, './Outputs/CostPerCase.csv')
CostAllGastroIncludingSequelae <- CostList %>%
map_depth(3,~.x$TotalHumanCapital) %>% #Extract out total cost (human capital method)
map(~.x[names(.x) %in% c("Gastroenteritis",names(SequelaeAssumptions))]) %>% #keep only 'all gastro' and sequelae
map_depth(2,~reduce(.x,`+`)) %>% #Sum over age groups
map_depth(1,~reduce(.x,`+`,.init = 0)) %>% #Sum over diseases (initial and sequelae)
reduce(`+`) %>% #sum across pathogens
quantile(probs = c(0.5,0.05,0.95))
names(CostAllGastroIncludingSequelae) <- c('median','5%','95%')
write.csv(CostAllGastroIncludingSequelae, './Outputs/CostAllGastroIncludingSequelae.csv')
IncidenceTable <- summariseEpiList(IncidenceList)
HospTable <- summariseEpiList(HospList)
DeathTable <- summariseEpiList(DeathList)
EpiTable <- bind_rows(Deaths = DeathTable,
Hospitalisations = HospTable,
Cases = IncidenceTable,
.id = 'Measure') %>%
subset(!(Disease %in% names(PathogenAssumptions) & Pathogen == 'All Pathogens'))
write.csv(EpiTable,'./Outputs/EpiTable.csv')
CostSummaries <- summariseCostList(CostList)
write.csv(CostSummaries$Detailed,'./Outputs/CostTable.csv')
write.csv(CostSummaries$Categorised,'./Outputs/CostTableCategories.csv')
# save workspace in two versions; one light version to be used by the shiny app
# and another larger version with everything
UnusedLargeObjects <- c('CostList','SequelaeFractions','TotalCostByPathogen',
'TotalIncidence')
save.image('AusFBDiseaseImage.RData')
#trim DeathList, HospList, and IncidenceList down to 1000 draws
trim <- 1000
DeathList <- DeathList %>% map_depth(3,~.x[1:trim])
HospList <- HospList %>% map_depth(3,~.x[1:trim])
IncidenceList <- IncidenceList %>% map_depth(3,~.x[1:trim])
WTPList <- WTPList %>% map_depth(2,~.x[1:trim])
Hospitalisations <- subset(Hospitalisations,
DC4D %in% (map(c(PathogenAssumptions,
SequelaeAssumptions),
~.x$hospCodes) %>%
unlist(use.names = F) %>% unique))
save(list = setdiff(ls(all.names = T), UnusedLargeObjects),
file = 'Outputs/AusFBDiseaseImage-Light.RData')
load('Outputs/AusFBDiseaseImage-Light.RData')
load('Outputs/AusFBDiseaseImage-Light.RData')
CostItems.Ordered <- c('GPSpecialist','ED','Hospitalisation','Tests','Medications',
'HumanCapital','WTP','Death','WTPOngoing','TotalHumanCapital')
Diseases.Ordered <- c("Initial Disease", "IBS", "ReactiveArthritis", "GBS", 'HUS')
read.csv("Outputs/CostTable.csv") %>%
select(-X) %>%
mutate(Disease = ifelse(Disease == unlist(map(PathogenAssumptions, ~.x$name))[Pathogen],
'Initial Disease',
Disease)) %>%
subset(Disease %in% Diseases.Ordered) %>%
#mutate(Disease = factor(Disease, levels = Diseases.Ordered)) %>%
group_by(Pathogen, Disease) %>%
group_walk(~{
.x %>%
subset(CostItem %in% CostItems.Ordered) %>%
mutate(across(c(X5.,X95.,median),~format(signif(.x/10^3,3), #format to three significant figures
big.mark = ",",
scientific = FALSE,
nsmall = 0,
trim = T,
drop0trailing = TRUE))) %>%
mutate(across(c(X5.,X95.),           #remove intervals when they are the same as the point estimate
~if_else(.x == median,
'',
.x))) %>%
mutate(Cost = if_else(X5. == '',  #merge cost and and interval into a single line
median,
paste0(median, '\n', '(',X5.,' - ',X95.,')'))) %>%
mutate(CostItem = factor(CostItem, levels = CostItems.Ordered)) %>%
select(AgeGroup, CostItem, Cost) %>%
pivot_wider(names_from = AgeGroup, values_from = Cost) %>%
arrange(CostItem) %>%
write_excel_csv(paste0('Report/',paste(paste(.y,collapse = '.'),'Table.csv',sep = '.')))
})
read.csv("Outputs/CostTable.csv")
CostItems.Ordered <- c('GPSpecialist','ED','Hospitalisation','Tests','Medications',
'HumanCapital','WTP','Deaths','WTPOngoing','TotalHumanCapital')
Diseases.Ordered <- c("Initial Disease", "IBS", "ReactiveArthritis", "GBS", 'HUS')
read.csv("Outputs/CostTable.csv") %>%
select(-X) %>%
mutate(Disease = ifelse(Disease == unlist(map(PathogenAssumptions, ~.x$name))[Pathogen],
'Initial Disease',
Disease)) %>%
subset(Disease %in% Diseases.Ordered) %>%
#mutate(Disease = factor(Disease, levels = Diseases.Ordered)) %>%
group_by(Pathogen, Disease) %>%
group_walk(~{
.x %>%
subset(CostItem %in% CostItems.Ordered) %>%
mutate(across(c(X5.,X95.,median),~format(signif(.x/10^3,3), #format to three significant figures
big.mark = ",",
scientific = FALSE,
nsmall = 0,
trim = T,
drop0trailing = TRUE))) %>%
mutate(across(c(X5.,X95.),           #remove intervals when they are the same as the point estimate
~if_else(.x == median,
'',
.x))) %>%
mutate(Cost = if_else(X5. == '',  #merge cost and and interval into a single line
median,
paste0(median, '\n', '(',X5.,' - ',X95.,')'))) %>%
mutate(CostItem = factor(CostItem, levels = CostItems.Ordered)) %>%
select(AgeGroup, CostItem, Cost) %>%
pivot_wider(names_from = AgeGroup, values_from = Cost) %>%
arrange(CostItem) %>%
write_excel_csv(paste0('Report/',paste(paste(.y,collapse = '.'),'Table.csv',sep = '.')))
})
read.csv("Outputs/CostTable.csv") %>%
select(-X) %>%
mutate(Disease = ifelse(Disease == unlist(map(PathogenAssumptions, ~.x$name))[Pathogen],
'Initial Disease',
Disease)) %>%
subset(Disease %in% Diseases.Ordered) %>%
#mutate(Disease = factor(Disease, levels = Diseases.Ordered)) %>%
group_by(Pathogen, Disease) %>%
group_walk(~{
.x %>%
subset(CostItem %in% CostItems.Ordered) %>%
mutate(across(c(X5.,X95.,median),~format(signif(.x/10^3,3), #format to three significant figures
big.mark = ",",
scientific = FALSE,
nsmall = 0,
trim = T,
drop0trailing = TRUE))) %>%
mutate(across(c(X5.,X95.),           #remove intervals when they are the same as the point estimate
~if_else(.x == median,
'',
.x))) %>%
mutate(Cost = if_else(X5. == '',  #merge cost and and interval into a single line
median,
paste0(median, '\n', '(',X5.,' - ',X95.,')'))) %>%
mutate(CostItem = factor(CostItem, levels = CostItems.Ordered)) %>%
select(AgeGroup, CostItem, Cost) %>%
pivot_wider(names_from = AgeGroup, values_from = Cost) %>%
arrange(CostItem) %>%
write_excel_csv(paste0('Report/',paste(paste(.y,collapse = '.'),'Table.csv',sep = '.')))
})
load('Outputs/AusFBDiseaseImage-Light.RData')
CostItems.Ordered <- c('GPSpecialist','ED','Hospitalisation','Tests','Medications',
'HumanCapital','WTP','Deaths','WTPOngoing','TotalHumanCapital')
Diseases.Ordered <- c("Initial Disease", "IBS", "ReactiveArthritis", "GBS", 'HUS')
read.csv("Outputs/CostTable.csv") %>%
select(-X) %>%
mutate(Disease = ifelse(Disease == unlist(map(PathogenAssumptions, ~.x$name))[Pathogen],
'Initial Disease',
Disease)) %>%
subset(Disease %in% Diseases.Ordered) %>%
#mutate(Disease = factor(Disease, levels = Diseases.Ordered)) %>%
group_by(Pathogen, Disease) %>%
group_walk(~{
out <- .x %>%
subset(CostItem %in% CostItems.Ordered) %>%
mutate(across(c(X5.,X95.,median),~format(signif(.x/10^3,3), #format to three significant figures
big.mark = ",",
scientific = FALSE,
nsmall = 0,
trim = T,
drop0trailing = TRUE))) %>%
mutate(across(c(X5.,X95.),           #remove intervals when they are the same as the point estimate
~if_else(.x == median,
'',
.x))) %>%
mutate(Cost = if_else(X5. == '',  #merge cost and and interval into a single line
median,
paste0(median, '\n', '(',X5.,' - ',X95.,')'))) %>%
mutate(CostItem = factor(CostItem, levels = CostItems.Ordered)) %>%
select(AgeGroup, CostItem, Cost) %>%
pivot_wider(names_from = AgeGroup, values_from = Cost) %>%
arrange(CostItem) %>%
write_excel_csv(paste0('Report/',paste(paste(.y,collapse = '.'),'Table.csv',sep = '.')))
print(subset(out, CostItem == WTPOngoing)$`All Ages`)
if(subset(out, CostItem == WTPOngoing)$`All Ages` == "0"){
out <- subset(out, CostItem != WTPOngoing)
}
out
})
#
# mutate(CostItem = recode(CostItem,
#                          GPSpecialist = 'GP and Specialist Vists',
#                          ED = 'ED Visits',
#                          Deaths = "Premature Mortality",
#                          WTPOngoing = 'WTP-Ongoing',
#                          FrictionLow = 'Friction-Low',
#                          FrictionHigh = 'Friction-High',
#                          HumanCapital = 'Human Capital',
#                          TotalFrictionHigh = 'Total.Friction-High',
#                          TotalFrictionLow = 'Total.Friction-Low',
#                          TotalHumanCapital = 'Total.Human Capital')) %>%
#
#
#
load('Outputs/AusFBDiseaseImage-Light.RData')
CostItems.Ordered <- c('GPSpecialist','ED','Hospitalisation','Tests','Medications',
'HumanCapital','WTP','Deaths','WTPOngoing','TotalHumanCapital')
Diseases.Ordered <- c("Initial Disease", "IBS", "ReactiveArthritis", "GBS", 'HUS')
read.csv("Outputs/CostTable.csv") %>%
select(-X) %>%
mutate(Disease = ifelse(Disease == unlist(map(PathogenAssumptions, ~.x$name))[Pathogen],
'Initial Disease',
Disease)) %>%
subset(Disease %in% Diseases.Ordered) %>%
#mutate(Disease = factor(Disease, levels = Diseases.Ordered)) %>%
group_by(Pathogen, Disease) %>%
group_walk(~{
out <- .x %>%
subset(CostItem %in% CostItems.Ordered) %>%
mutate(across(c(X5.,X95.,median),~format(signif(.x/10^3,3), #format to three significant figures
big.mark = ",",
scientific = FALSE,
nsmall = 0,
trim = T,
drop0trailing = TRUE))) %>%
mutate(across(c(X5.,X95.),           #remove intervals when they are the same as the point estimate
~if_else(.x == median,
'',
.x))) %>%
mutate(Cost = if_else(X5. == '',  #merge cost and and interval into a single line
median,
paste0(median, '\n', '(',X5.,' - ',X95.,')'))) %>%
mutate(CostItem = factor(CostItem, levels = CostItems.Ordered)) %>%
select(AgeGroup, CostItem, Cost) %>%
pivot_wider(names_from = AgeGroup, values_from = Cost) %>%
arrange(CostItem) %>%
write_excel_csv(paste0('Report/',paste(paste(.y,collapse = '.'),'Table.csv',sep = '.')))
print(subset(out, CostItem == 'WTPOngoing')$`All Ages`)
if(subset(out, CostItem == 'WTPOngoing')$`All Ages` == "0"){
out <- subset(out, CostItem != 'WTPOngoing')
}
out
})
#
# mutate(CostItem = recode(CostItem,
#                          GPSpecialist = 'GP and Specialist Vists',
#                          ED = 'ED Visits',
#                          Deaths = "Premature Mortality",
#                          WTPOngoing = 'WTP-Ongoing',
#                          FrictionLow = 'Friction-Low',
#                          FrictionHigh = 'Friction-High',
#                          HumanCapital = 'Human Capital',
#                          TotalFrictionHigh = 'Total.Friction-High',
#                          TotalFrictionLow = 'Total.Friction-Low',
#                          TotalHumanCapital = 'Total.Human Capital')) %>%
#
#
#
load('Outputs/AusFBDiseaseImage-Light.RData')
CostItems.Ordered <- c('GPSpecialist','ED','Hospitalisation','Tests','Medications',
'HumanCapital','WTP','Deaths','WTPOngoing','TotalHumanCapital')
Diseases.Ordered <- c("Initial Disease", "IBS", "ReactiveArthritis", "GBS", 'HUS')
read.csv("Outputs/CostTable.csv") %>%
select(-X) %>%
mutate(Disease = ifelse(Disease == unlist(map(PathogenAssumptions, ~.x$name))[Pathogen],
'Initial Disease',
Disease)) %>%
subset(Disease %in% Diseases.Ordered) %>%
#mutate(Disease = factor(Disease, levels = Diseases.Ordered)) %>%
group_by(Pathogen, Disease) %>%
group_walk(~{
out <- .x %>%
subset(CostItem %in% CostItems.Ordered) %>%
mutate(across(c(X5.,X95.,median),~format(signif(.x/10^3,3), #format to three significant figures
big.mark = ",",
scientific = FALSE,
nsmall = 0,
trim = T,
drop0trailing = TRUE))) %>%
mutate(across(c(X5.,X95.),           #remove intervals when they are the same as the point estimate
~if_else(.x == median,
'',
.x))) %>%
mutate(Cost = if_else(X5. == '',  #merge cost and and interval into a single line
median,
paste0(median, '\n', '(',X5.,' - ',X95.,')'))) %>%
mutate(CostItem = factor(CostItem, levels = CostItems.Ordered)) %>%
select(AgeGroup, CostItem, Cost) %>%
pivot_wider(names_from = AgeGroup, values_from = Cost) %>%
arrange(CostItem)
print(subset(out, CostItem == 'WTPOngoing')$`All Ages`)
if(subset(out, CostItem == 'WTPOngoing')$`All Ages` == "0"){
out <- subset(out, CostItem != 'WTPOngoing')
}
out %>% awrite_excel_csv(paste0('Report/',paste(paste(.y,collapse = '.'),'Table.csv',sep = '.')))
})
#
# mutate(CostItem = recode(CostItem,
#                          GPSpecialist = 'GP and Specialist Vists',
#                          ED = 'ED Visits',
#                          Deaths = "Premature Mortality",
#                          WTPOngoing = 'WTP-Ongoing',
#                          FrictionLow = 'Friction-Low',
#                          FrictionHigh = 'Friction-High',
#                          HumanCapital = 'Human Capital',
#                          TotalFrictionHigh = 'Total.Friction-High',
#                          TotalFrictionLow = 'Total.Friction-Low',
#                          TotalHumanCapital = 'Total.Human Capital')) %>%
#
#
#
load('Outputs/AusFBDiseaseImage-Light.RData')
CostItems.Ordered <- c('GPSpecialist','ED','Hospitalisation','Tests','Medications',
'HumanCapital','WTP','Deaths','WTPOngoing','TotalHumanCapital')
Diseases.Ordered <- c("Initial Disease", "IBS", "ReactiveArthritis", "GBS", 'HUS')
read.csv("Outputs/CostTable.csv") %>%
select(-X) %>%
mutate(Disease = ifelse(Disease == unlist(map(PathogenAssumptions, ~.x$name))[Pathogen],
'Initial Disease',
Disease)) %>%
subset(Disease %in% Diseases.Ordered) %>%
#mutate(Disease = factor(Disease, levels = Diseases.Ordered)) %>%
group_by(Pathogen, Disease) %>%
group_walk(~{
out <- .x %>%
subset(CostItem %in% CostItems.Ordered) %>%
mutate(across(c(X5.,X95.,median),~format(signif(.x/10^3,3), #format to three significant figures
big.mark = ",",
scientific = FALSE,
nsmall = 0,
trim = T,
drop0trailing = TRUE))) %>%
mutate(across(c(X5.,X95.),           #remove intervals when they are the same as the point estimate
~if_else(.x == median,
'',
.x))) %>%
mutate(Cost = if_else(X5. == '',  #merge cost and and interval into a single line
median,
paste0(median, '\n', '(',X5.,' - ',X95.,')'))) %>%
mutate(CostItem = factor(CostItem, levels = CostItems.Ordered)) %>%
select(AgeGroup, CostItem, Cost) %>%
pivot_wider(names_from = AgeGroup, values_from = Cost) %>%
arrange(CostItem)
print(subset(out, CostItem == 'WTPOngoing')$`All Ages`)
if(subset(out, CostItem == 'WTPOngoing')$`All Ages` == "0"){
out <- subset(out, CostItem != 'WTPOngoing')
}
out %>% write_excel_csv(paste0('Report/',paste(paste(.y,collapse = '.'),'Table.csv',sep = '.')))
})
#
# mutate(CostItem = recode(CostItem,
#                          GPSpecialist = 'GP and Specialist Vists',
#                          ED = 'ED Visits',
#                          Deaths = "Premature Mortality",
#                          WTPOngoing = 'WTP-Ongoing',
#                          FrictionLow = 'Friction-Low',
#                          FrictionHigh = 'Friction-High',
#                          HumanCapital = 'Human Capital',
#                          TotalFrictionHigh = 'Total.Friction-High',
#                          TotalFrictionLow = 'Total.Friction-Low',
#                          TotalHumanCapital = 'Total.Human Capital')) %>%
#
#
#
load('Outputs/AusFBDiseaseImage-Light.RData')
CostItems.Ordered <- c('GPSpecialist','ED','Hospitalisation','Tests','Medications',
'HumanCapital','WTP','Deaths','WTPOngoing','TotalHumanCapital')
Diseases.Ordered <- c("Initial Disease", "IBS", "ReactiveArthritis", "GBS", 'HUS')
read.csv("Outputs/CostTable.csv") %>%
select(-X) %>%
mutate(Disease = ifelse(Disease == unlist(map(PathogenAssumptions, ~.x$name))[Pathogen],
'Initial Disease',
Disease)) %>%
subset(Disease %in% Diseases.Ordered) %>%
#mutate(Disease = factor(Disease, levels = Diseases.Ordered)) %>%
group_by(Pathogen, Disease) %>%
group_walk(~{
.x %>%
subset(CostItem %in% CostItems.Ordered) %>%
mutate(across(c(X5.,X95.,median),~format(signif(.x/10^3,3), #format to three significant figures
big.mark = ",",
scientific = FALSE,
nsmall = 0,
trim = T,
drop0trailing = TRUE))) %>%
mutate(across(c(X5.,X95.),           #remove intervals when they are the same as the point estimate
~if_else(.x == median,
'',
.x))) %>%
mutate(Cost = if_else(X5. == '',  #merge cost and and interval into a single line
median,
paste0(median, '\n', '(',X5.,' - ',X95.,')'))) %>%
mutate(CostItem = factor(CostItem, levels = CostItems.Ordered)) %>%
select(AgeGroup, CostItem, Cost) %>%
pivot_wider(names_from = AgeGroup, values_from = Cost) %>%
arrange(CostItem) %>%
subset(`All Ages` != '0') %>%
write_excel_csv(paste0('Report/',paste(paste(.y,collapse = '.'),'Table.csv',sep = '.')))
})
#
# mutate(CostItem = recode(CostItem,
#                          GPSpecialist = 'GP and Specialist Vists',
#                          ED = 'ED Visits',
#                          Deaths = "Premature Mortality",
#                          WTPOngoing = 'WTP-Ongoing',
#                          FrictionLow = 'Friction-Low',
#                          FrictionHigh = 'Friction-High',
#                          HumanCapital = 'Human Capital',
#                          TotalFrictionHigh = 'Total.Friction-High',
#                          TotalFrictionLow = 'Total.Friction-Low',
#                          TotalHumanCapital = 'Total.Human Capital')) %>%
#
#
#
