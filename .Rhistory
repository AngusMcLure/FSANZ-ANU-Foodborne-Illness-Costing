getPertMinMaxModeFromQuant <- function(median, lowq, highq,
lowp = 0.05, highp = 0.95,
shape = 4){
if(lowq > median || highq < median || lowq > highq){
error('Invalid distributional parameters. lowq < median < highq')
}
if(lowp > 0.5 || highp < 0.5 || lowp > highp || lowp < 0 || highp > 1){
error('Invalid distributional parameters. 0 < lowp < 0.5 < highp < 1')
}
f <- function(x){
sum((qpert(c(lowp, 0.5, highp), min = lowq - x[1], max = highq + x[2], mode = x[3], shape = shape) - c(lowq, median, highq))^2)
}
opt <- optim(c(1, 1,0), f , lower = c(0,0,lowq), upper = c(Inf, Inf, highq), method = "L-BFGS-B")
print(opt)
list(min = lowq - opt$par[1], max = highq + opt$par[2], mode = opt$par[3])
}
quantile(rpert_alt(n = 1000000, lowq = 1, highq = 3, lowp = 0.05, highp = 0.95, median = 2.6), probs = c(0.05, 0.5, 0.95))
quantile(rpert_alt(n = 1000000, lowq = 1, highq = 3, lowp = 0.05, highp = 0.95, median = 2.4), probs = c(0.05, 0.5, 0.95))
getPertMinMaxModeFromQuant <- function(median, lowq, highq,
lowp = 0.05, highp = 0.95,
shape = 4){
if(lowq > median || highq < median || lowq > highq){
error('Invalid distributional parameters. lowq < median < highq')
}
if(lowp > 0.5 || highp < 0.5 || lowp > highp || lowp < 0 || highp > 1){
error('Invalid distributional parameters. 0 < lowp < 0.5 < highp < 1')
}
f <- function(x){
sum(abs(qpert(c(lowp, 0.5, highp), min = lowq - x[1], max = highq + x[2], mode = x[3], shape = shape) - c(lowq, median, highq)))
}
opt <- optim(c(1, 1,0), f , lower = c(0,0,lowq), upper = c(Inf, Inf, highq), method = "L-BFGS-B")
print(opt)
list(min = lowq - opt$par[1], max = highq + opt$par[2], mode = opt$par[3])
}
quantile(rpert_alt(n = 1000000, lowq = 1, highq = 3, lowp = 0.05, highp = 0.95, median = 2.4), probs = c(0.05, 0.5, 0.95))
quantile(rpert_alt(n = 1000000, lowq = 1, highq = 3, lowp = 0.05, highp = 0.95, median = 2.4), probs = c(0.05, 0.5, 0.95))
getPertMinMaxModeFromQuant <- function(median, lowq, highq,
lowp = 0.05, highp = 0.95,
shape = 4){
if(lowq > median || highq < median || lowq > highq){
error('Invalid distributional parameters. lowq < median < highq')
}
if(lowp > 0.5 || highp < 0.5 || lowp > highp || lowp < 0 || highp > 1){
error('Invalid distributional parameters. 0 < lowp < 0.5 < highp < 1')
}
f <- function(x){
sum((qpert(c(lowp, 0.5, highp), min = lowq - x[1], max = highq + x[2], mode = x[3], shape = shape) - c(lowq, median, highq))^2)
}
opt <- optim(c(1, 1,0), f , lower = c(0,0,lowq), upper = c(Inf, Inf, highq), method = "L-BFGS-B")
print(opt)
list(min = lowq - opt$par[1], max = highq + opt$par[2], mode = opt$par[3])
}
getPertMinMaxModeFromQuant
quantile(rpert_alt(n = 1000000, lowq = 1, highq = 3, lowp = 0.05, highp = 0.95, median = 2.4), probs = c(0.05, 0.5, 0.95))
a$a <- 0
a <- list(a =0)
!a$a
a$a
getPertMinMaxModeFromQuant <- function(median, lowq, highq,
lowp = 0.05, highp = 0.95,
shape = 4){
if(lowq > median || highq < median || lowq > highq){
error('Invalid distributional parameters. lowq < median < highq')
}
if(lowp > 0.5 || highp < 0.5 || lowp > highp || lowp < 0 || highp > 1){
error('Invalid distributional parameters. 0 < lowp < 0.5 < highp < 1')
}
f <- function(x){
sum((qpert(c(lowp, 0.5, highp), min = lowq - x[1], max = highq + x[2], mode = x[3], shape = shape) - c(lowq, median, highq))^2)
}
opt <- optim(c(1, 1,0), f , lower = c(0,0,lowq), upper = c(Inf, Inf, highq), method = "L-BFGS-B")
if(!opt$convergence){
error('Distributional parameters may be invalid, or very extreme. Check that median is not unreasonably close to lowq or lowp')
}
list(min = lowq - opt$par[1], max = highq + opt$par[2], mode = opt$par[3])
}
quantile(rpert_alt(n = 1000000, lowq = 1, highq = 3, lowp = 0.05, highp = 0.95, median = 2.4), probs = c(0.05, 0.5, 0.95))
quantile(rpert_alt(n = 1000000, lowq = 1, highq = 3, lowp = 0.05, highp = 0.95, median = 2.3), probs = c(0.05, 0.5, 0.95))
getPertMinMaxModeFromQuant <- function(median, lowq, highq,
lowp = 0.05, highp = 0.95,
shape = 4){
if(lowq > median || highq < median || lowq > highq){
error('Invalid distributional parameters. lowq < median < highq')
}
if(lowp > 0.5 || highp < 0.5 || lowp > highp || lowp < 0 || highp > 1){
error('Invalid distributional parameters. 0 < lowp < 0.5 < highp < 1')
}
f <- function(x){
sum((qpert(c(lowp, 0.5, highp), min = lowq - x[1], max = highq + x[2], mode = x[3], shape = shape) - c(lowq, median, highq))^2)
}
opt <- optim(c(1, 1,0), f , lower = c(0,0,lowq), upper = c(Inf, Inf, highq), method = "L-BFGS-B")
if(!opt$convergence){
error('Distributional parameters may be invalid, or very extreme. Check that median is not unreasonably close to lowq or lowp')
}
list(min = lowq - opt$par[1], max = highq + opt$par[2], mode = opt$par[3])
}
quantile(rpert_alt(n = 1000000, lowq = 1, highq = 3, lowp = 0.05, highp = 0.95, median = 2.3), probs = c(0.05, 0.5, 0.95))
getPertMinMaxModeFromQuant <- function(median, lowq, highq,
lowp = 0.05, highp = 0.95,
shape = 4){
if(lowq > median || highq < median || lowq > highq){
stop('Invalid distributional parameters. lowq < median < highq')
}
if(lowp > 0.5 || highp < 0.5 || lowp > highp || lowp < 0 || highp > 1){
stop('Invalid distributional parameters. 0 < lowp < 0.5 < highp < 1')
}
f <- function(x){
sum((qpert(c(lowp, 0.5, highp), min = lowq - x[1], max = highq + x[2], mode = x[3], shape = shape) - c(lowq, median, highq))^2)
}
opt <- optim(c(1, 1,0), f , lower = c(0,0,lowq), upper = c(Inf, Inf, highq), method = "L-BFGS-B")
if(!opt$convergence){
stop('Distributional parameters may be invalid, or very extreme. Check that median is not unreasonably close to lowq or lowp')
}
list(min = lowq - opt$par[1], max = highq + opt$par[2], mode = opt$par[3])
}
quantile(rpert_alt(n = 1000000, lowq = 1, highq = 3, lowp = 0.05, highp = 0.95, median = 2.3), probs = c(0.05, 0.5, 0.95))
getPertMinMaxModeFromQuant <- function(median, lowq, highq,
lowp = 0.05, highp = 0.95,
shape = 4){
if(lowq > median || highq < median || lowq > highq){
stop('Invalid distributional parameters. lowq < median < highq')
}
if(lowp > 0.5 || highp < 0.5 || lowp > highp || lowp < 0 || highp > 1){
stop('Invalid distributional parameters. 0 < lowp < 0.5 < highp < 1')
}
f <- function(x){
sum((qpert(c(lowp, 0.5, highp), min = lowq - x[1], max = highq + x[2], mode = x[3], shape = shape) - c(lowq, median, highq))^2)
}
opt <- optim(c(1, 1,0), f , lower = c(0,0,lowq), upper = c(Inf, Inf, highq), method = "L-BFGS-B")
if(!opt$convergence){
print(opt$convergence)
stop('Distributional parameters may be invalid, or very extreme. Check that median is not unreasonably close to lowq or lowp')
}
list(min = lowq - opt$par[1], max = highq + opt$par[2], mode = opt$par[3])
}
quantile(rpert_alt(n = 1000000, lowq = 1, highq = 3, lowp = 0.05, highp = 0.95, median = 2.3), probs = c(0.05, 0.5, 0.95))
getPertMinMaxModeFromQuant <- function(median, lowq, highq,
lowp = 0.05, highp = 0.95,
shape = 4){
if(lowq > median || highq < median || lowq > highq){
stop('Invalid distributional parameters. lowq < median < highq')
}
if(lowp > 0.5 || highp < 0.5 || lowp > highp || lowp < 0 || highp > 1){
stop('Invalid distributional parameters. 0 < lowp < 0.5 < highp < 1')
}
f <- function(x){
sum((qpert(c(lowp, 0.5, highp), min = lowq - x[1], max = highq + x[2], mode = x[3], shape = shape) - c(lowq, median, highq))^2)
}
opt <- optim(c(1, 1,0), f , lower = c(0,0,lowq), upper = c(Inf, Inf, highq), method = "L-BFGS-B")
if(opt$convergence){
print(opt$convergence)
stop('Distributional parameters may be invalid, or very extreme. Check that median is not unreasonably close to lowq or lowp')
}
list(min = lowq - opt$par[1], max = highq + opt$par[2], mode = opt$par[3])
}
quantile(rpert_alt(n = 1000000, lowq = 1, highq = 3, lowp = 0.05, highp = 0.95, median = 2.3), probs = c(0.05, 0.5, 0.95))
quantile(rpert_alt(n = 1000000, lowq = 1, highq = 3, lowp = 0.05, highp = 0.95, median = 2.4), probs = c(0.05, 0.5, 0.95))
quantile(rpert_alt(n = 1000000, lowq = 1, highq = 3, lowp = 0.05, highp = 0.95, median = 2.5), probs = c(0.05, 0.5, 0.95))
quantile(rpert_alt(n = 1000000, lowq = 1, highq = 3, lowp = 0.05, highp = 0.95, median = 2.6), probs = c(0.05, 0.5, 0.95))
getPertMinMaxModeFromQuant <- function(median, lowq, highq,
lowp = 0.05, highp = 0.95,
shape = 4){
if(lowq > median || highq < median || lowq > highq){
stop('Invalid distributional parameters. lowq < median < highq')
}
if(lowp > 0.5 || highp < 0.5 || lowp > highp || lowp < 0 || highp > 1){
stop('Invalid distributional parameters. 0 < lowp < 0.5 < highp < 1')
}
f <- function(x){
sum((qpert(c(lowp, 0.5, highp), min = lowq - x[1], max = highq + x[2], mode = x[3], shape = shape) - c(lowq, median, highq))^2)
}
opt <- optim(c(1, 1,0), f , lower = c(0,0,lowq), upper = c(Inf, Inf, highq), method = "L-BFGS-B")
if(opt$convergence | sqrt(opt$value) > 0.01){
print(sqrt(opt$value))
print(opt$convergence)
stop('Distributional parameters may be invalid, or very extreme. Check that median is not unreasonably close to lowq or lowp')
}
list(min = lowq - opt$par[1], max = highq + opt$par[2], mode = opt$par[3])
}
quantile(rpert_alt(n = 1000000, lowq = 1, highq = 3, lowp = 0.05, highp = 0.95, median = 2.6), probs = c(0.05, 0.5, 0.95))
quantile(rpert_alt(n = 1000000, lowq = 1, highq = 3, lowp = 0.05, highp = 0.95, median = 2.5), probs = c(0.05, 0.5, 0.95))
quantile(rpert_alt(n = 1000000, lowq = 1, highq = 3, lowp = 0.05, highp = 0.95, median = 2.4), probs = c(0.05, 0.5, 0.95))
quantile(rpert_alt(n = 1000000, lowq = 1, highq = 3, lowp = 0.05, highp = 0.95, median = 2.45), probs = c(0.05, 0.5, 0.95))
getPertMinMaxModeFromQuant <- function(median, lowq, highq,
lowp = 0.05, highp = 0.95,
shape = 4){
if(lowq > median || highq < median || lowq > highq){
stop('Invalid distributional parameters. lowq < median < highq')
}
if(lowp > 0.5 || highp < 0.5 || lowp > highp || lowp < 0 || highp > 1){
stop('Invalid distributional parameters. 0 < lowp < 0.5 < highp < 1')
}
f <- function(x){
sum((qpert(c(lowp, 0.5, highp), min = lowq - x[1], max = highq + x[2], mode = x[3], shape = shape) - c(lowq, median, highq))^2)
}
opt <- optim(c(1, 1,0), f , lower = c(0,0,lowq), upper = c(Inf, Inf, highq), method = "L-BFGS-B")
print(sqrt(opt$value))
if(opt$convergence | sqrt(opt$value) > 0.01){
print(opt$convergence)
stop('Distributional parameters may be invalid, or very extreme. Check that median is not unreasonably close to lowq or lowp')
}
list(min = lowq - opt$par[1], max = highq + opt$par[2], mode = opt$par[3])
}
quantile(rpert_alt(n = 1000000, lowq = 1, highq = 3, lowp = 0.05, highp = 0.95, median = 2.45), probs = c(0.05, 0.5, 0.95))
quantile(rpert_alt(n = 1000000, lowq = 1, highq = 3, lowp = 0.05, highp = 0.95, median = 2.4), probs = c(0.05, 0.5, 0.95))
quantile(rpert_alt(n = 1000000, lowq = 1, highq = 3, lowp = 0.05, highp = 0.95, median = 2.3), probs = c(0.05, 0.5, 0.95))
getPertMinMaxModeFromQuant <- function(median, lowq, highq,
lowp = 0.05, highp = 0.95,
shape = 4){
if(lowq > median || highq < median || lowq > highq){
stop('Invalid distributional parameters. lowq < median < highq')
}
if(lowp > 0.5 || highp < 0.5 || lowp > highp || lowp < 0 || highp > 1){
stop('Invalid distributional parameters. 0 < lowp < 0.5 < highp < 1')
}
f <- function(x){
sum((qpert(c(lowp, 0.5, highp), min = lowq - x[1], max = highq + x[2], mode = x[3], shape = shape) - c(lowq, median, highq))^2)
}
opt <- optim(c(1, 1,0), f , lower = c(0,0,lowq), upper = c(Inf, Inf, highq), method = "L-BFGS-B")
print(sqrt(opt$value))
if(opt$convergence | sqrt(opt$value) > 0.001){
print(opt$convergence)
stop('Distributional parameters may be invalid, or very extreme. Check that median is not unreasonably close to lowq or lowp')
}
list(min = lowq - opt$par[1], max = highq + opt$par[2], mode = opt$par[3])
}
quantile(rpert_alt(n = 1000000, lowq = 1, highq = 3, lowp = 0.05, highp = 0.95, median = 2.3), probs = c(0.05, 0.5, 0.95))
quantile(rpert_alt(n = 1000000, lowq = 1, highq = 3, lowp = 0.05, highp = 0.95, median = 2.4), probs = c(0.05, 0.5, 0.95))
quantile(rpert_alt(n = 1000000, lowq = 1, highq = 3, lowp = 0.05, highp = 0.95, median = 2.45), probs = c(0.05, 0.5, 0.95))
quantile(rpert_alt(n = 1000000, lowq = 1, highq = 3, lowp = 0.05, highp = 0.95, median = 2.43), probs = c(0.05, 0.5, 0.95))
qpert_alt( lowq = 1, highq = 3, lowp = 0.05, highp = 0.95, median = 2.43))
qpert_alt(p = (0:1000)/1000, lowq = 1, highq = 3, lowp = 0.05, highp = 0.95, median = 2.43)
qpert_alt <- function (p, mode = 0, lowq = -1, highq = 1,
lowp = 0.05, highp = 0.95, median = NULL,
shape = 4, lower.tail = TRUE,
log.p = FALSE) {
if(is.null(median)){
MinMax <- getPertMinMaxFromQuant(mode, lowq, highq,
lowp = lowp, highp = highp,
shape = shape)
}else{
MinMax <- getPertMinMaxModeFromQuant(median, lowq, highq,
lowp = lowp, highp = highp,
shape = shape)
mode <- MinMax$mode
}
qpert(p, min = MinMax$min, mode = mode, max = MinMax$max, shape = shape, lower.tail = lower.tail,
log.p = log.p)
}
qpert_alt(p = (0:1000)/1000, lowq = 1, highq = 3, lowp = 0.05, highp = 0.95, median = 2.43)
qnorm(0)
qnorm(1)
qnorm(0.1)
qpert_alt(p = (0:1000)/1000, lowq = 1, highq = 3, lowp = 0.05, highp = 0.95, median = 2.43) %>% plot
dpert_alt(p = (0:4000)/1000, lowq = 1, highq = 3, lowp = 0.05, highp = 0.95, median = 2.43) %>% plot
dpert_alt <- function (x, mode = 0, lowq = -1, highq = 1,
lowp = 0.05, highp = 0.95, median = NULL,
shape = 4, log = FALSE) {
if(is.null(median)){
MinMax <- getPertMinMaxFromQuant(mode, lowq, highq,
lowp = lowp, highp = highp,
shape = shape)
}else{
MinMax <- getPertMinMaxModeFromQuant(median, lowq, highq,
lowp = lowp, highp = highp,
shape = shape)
mode <- MinMax$mode
}
dpert(x, min = MinMax$min, mode = mode, max = MinMax$max, shape = shape, log = log)
}
dpert_alt(p = (0:4000)/1000, lowq = 1, highq = 3, lowp = 0.05, highp = 0.95, median = 2.43) %>% plot
dpert_alt <- function (x, mode = 0, lowq = -1, highq = 1,
lowp = 0.05, highp = 0.95, median = NULL,
shape = 4, log = FALSE) {
if(is.null(median)){
MinMax <- getPertMinMaxFromQuant(mode, lowq, highq,
lowp = lowp, highp = highp,
shape = shape)
}else{
MinMax <- getPertMinMaxModeFromQuant(median, lowq, highq,
lowp = lowp, highp = highp,
shape = shape)
mode <- MinMax$mode
}
dpert(x, min = MinMax$min, mode = mode, max = MinMax$max, shape = shape, log = log)
}
dpert_alt(x = (0:4000)/1000, lowq = 1, highq = 3, lowp = 0.05, highp = 0.95, median = 2.43) %>% plot
dpert_alt(x = (0:4000)/1000, lowq = 1, highq = 3, lowp = 0.05, highp = 0.95, median = 2.43) %>% plot((0:4000)/1000,.)
dpert_alt(x = (-1000:4000)/5000, lowq = 1, highq = 3, lowp = 0.05, highp = 0.95, median = 2.43) %>% plot((-1000:4000)/5000,.)
dpert_alt(x = (-1000:4000)/1000, lowq = 1, highq = 3, lowp = 0.05, highp = 0.95, median = 2.43) %>% plot((-1000:4000)/1000,.)
getPertMinMaxModeFromQuant <- function(median, lowq, highq,
lowp = 0.05, highp = 0.95,
shape = 4){
if(lowq > median || highq < median || lowq > highq){
stop('Invalid distributional parameters. lowq < median < highq')
}
if(lowp > 0.5 || highp < 0.5 || lowp > highp || lowp < 0 || highp > 1){
stop('Invalid distributional parameters. 0 < lowp < 0.5 < highp < 1')
}
f <- function(x){
sum((qpert(c(lowp, 0.5, highp), min = lowq - x[1], max = highq + x[2], mode = x[3], shape = shape) - c(lowq, median, highq))^2)
}
opt <- optim(c(1, 1,0), f , lower = c(0,0,lowq), upper = c(Inf, Inf, highq), method = "L-BFGS-B")
print(sqrt(opt$value))
if(opt$convergence | sqrt(opt$value) > 0.001){
print(opt$convergence)
stop('Distributional parameters may be invalid, or very extreme. Sometimes, though median lowq < median < highq, these parameters can imply a distribution which is extremely (or impossibly) left or right skewed.')
}
list(min = lowq - opt$par[1], max = highq + opt$par[2], mode = opt$par[3])
}
dpert_alt(x = (-1000:4000)/1000, lowq = 1, highq = 3, lowp = 0.05, highp = 0.95, median = 2.43) %>% plot((-1000:4000)/1000,.)
dpert_alt(x = (-1000:4000)/1000, lowq = 1, highq = 3, lowp = 0.05, highp = 0.95, median = 2.44) %>% plot((-1000:4000)/1000,.)
dpert_alt(x = (-1000:4000)/1000, lowq = 1, highq = 3, lowp = 0.05, highp = 0.95, median = 2.45) %>% plot((-1000:4000)/1000,.)
dpert_alt(x = (-1000:4000)/1000, lowq = 1, highq = 5, lowp = 0.05, highp = 0.95, median = 2.45) %>% plot((-1000:4000)/1000,.)
dpert_alt(x = (-1000:4000)/1000, lowq = 1, highq = 4, lowp = 0.05, highp = 0.95, median = 2.45) %>% plot((-1000:4000)/1000,.)
dpert_alt(x = (-1000:4000)/1000, lowq = 1, highq = 3, lowp = 0.05, highp = 0.95, median = 2.45) %>% plot((-1000:4000)/1000,.)
dpert_alt(x = (-1000:4000)/1000, lowq = 1, highq = 3.1, lowp = 0.05, highp = 0.95, median = 2.45) %>% plot((-1000:4000)/1000,.)
dpert_alt(x = (-1000:4000)/1000, lowq = 1, highq = 3.2, lowp = 0.05, highp = 0.95, median = 2.45) %>% plot((-1000:4000)/1000,.)
dpert_alt(x = (-1000:4000)/1000, lowq = 1, highq = 3.3, lowp = 0.05, highp = 0.95, median = 2.45) %>% plot((-1000:4000)/1000,.)
dpert_alt(x = (-1000:4000)/1000, lowq = 1, highq = 3.4, lowp = 0.05, highp = 0.95, median = 2.45) %>% plot((-1000:4000)/1000,.)
dpert_alt(x = (-1000:4000)/1000, lowq = 1, highq = 3.5, lowp = 0.05, highp = 0.95, median = 2.45) %>% plot((-1000:4000)/1000,.)
dpert_alt(x = (-1000:4000)/1000, lowq = 1, highq = 3.05, lowp = 0.05, highp = 0.95, median = 2.45) %>% plot((-1000:4000)/1000,.)
dpert_alt(x = (-1000:4000)/1000, lowq = 1, highq = 3, lowp = 0.05, highp = 0.95, median = 2.45) %>% plot((-1000:4000)/1000,.)
dpert_alt(x = (-1000:4000)/1000, lowq = 1, highq = 3, lowp = 0.05, highp = 0.95, median = 2.43) %>% plot((-1000:4000)/1000,.)
dpert_alt(x = (-1000:4000)/1000, lowq = 1, highq = 3, lowp = 0.05, highp = 0.95, median = 2) %>% plot((-1000:4000)/1000,.)
dpert_alt(x = (-1000:4000)/1000, lowq = 1, highq = 3, lowp = 0.05, highp = 0.95, median = 2.2) %>% plot((-1000:4000)/1000,.)
dpert_alt(x = (-1000:4000)/1000, lowq = 1, highq = 3, lowp = 0.05, highp = 0.95, median = 2.3) %>% plot((-1000:4000)/1000,.)
dpert_alt(x = (-1000:4000)/1000, lowq = 1, highq = 3, lowp = 0.05, highp = 0.95, median = 2.4) %>% plot((-1000:4000)/1000,.)
dpert_alt(x = (-1000:4000)/1000, lowq = 1, highq = 3, lowp = 0.05, highp = 0.95, median = 2.43) %>% plot((-1000:4000)/1000,.)
dpert_alt(x = (-1000:4000)/1000, lowq = 1, highq = 3, lowp = 0.05, highp = 0.95, median = 2.431) %>% plot((-1000:4000)/1000,.)
dpert_alt(x = (-1000:4000)/1000, lowq = 1, highq = 3, lowp = 0.05, highp = 0.95, median = 2.432) %>% plot((-1000:4000)/1000,.)
dpert_alt(x = (-1000:4000)/1000, lowq = 1, highq = 3, lowp = 0.05, highp = 0.95, median = 2.433) %>% plot((-1000:4000)/1000,.)
dpert_alt(x = (-1000:4000)/1000, lowq = 1, highq = 3, lowp = 0.05, highp = 0.95, median = 2.434) %>% plot((-1000:4000)/1000,.)
dpert_alt(x = (-1000:4000)/1000, lowq = 1, highq = 3, lowp = 0.05, highp = 0.95, median = 2.435) %>% plot((-1000:4000)/1000,.)
dpert_alt(x = (-1000:4000)/1000, lowq = 1, highq = 3, lowp = 0.05, highp = 0.95, median = 2.44) %>% plot((-1000:4000)/1000,.)
dpert_alt(x = (-1000:4000)/1000, lowq = 1, highq = 3, lowp = 0.05, highp = 0.95, median = 2.445) %>% plot((-1000:4000)/1000,.)
getPertMinMaxModeFromQuant <- function(median, lowq, highq,
lowp = 0.05, highp = 0.95,
shape = 4){
if(lowq > median || highq < median || lowq > highq){
stop('Invalid distributional parameters. Arguments must satisfy lowq < median < highq')
}
if(lowp > 0.5 || highp < 0.5 || lowp > highp || lowp < 0 || highp > 1){
stop('Invalid distributional parameters. Arguments must satisfy 0 < lowp < 0.5 < highp < 1')
}
f <- function(x){
sum((qpert(c(lowp, 0.5, highp), min = lowq - x[1], max = highq + x[2], mode = x[3], shape = shape) - c(lowq, median, highq))^2)
}
opt <- optim(c(1, 1,0), f , lower = c(0,0,lowq), upper = c(Inf, Inf, highq), method = "L-BFGS-B")
if(opt$convergence | sqrt(opt$value) > 0.001){
stop(paste('Distributional parameters may be invalid, or very extreme.',
'Sometimes, though the parameters satisfy:',
'    median lowq < median < highq',
'and',
'    0 < lowp < 0.5 < highp < 1',
'these parameters can imply a distribution which is extremely',
'(or impossibly) left or right skewed.',sep = '\n'))
}
list(min = lowq - opt$par[1], max = highq + opt$par[2], mode = opt$par[3])
}
dpert_alt(x = (-1000:4000)/1000, lowq = 1, highq = 3, lowp = 0.05, highp = 0.95, median = 2.445) %>% plot((-1000:4000)/1000,.)
getPertMinMaxModeFromQuant <- function(median, lowq, highq,
lowp = 0.05, highp = 0.95,
shape = 4){
if(lowq > median || highq < median || lowq > highq){
stop('Invalid distributional parameters. Arguments must satisfy lowq < median < highq')
}
if(lowp > 0.5 || highp < 0.5 || lowp > highp || lowp < 0 || highp > 1){
stop('Invalid distributional parameters. Arguments must satisfy 0 < lowp < 0.5 < highp < 1')
}
f <- function(x){
sum((qpert(c(lowp, 0.5, highp), min = lowq - x[1], max = highq + x[2], mode = x[3], shape = shape) - c(lowq, median, highq))^2)
}
opt <- optim(c(1, 1,0), f , lower = c(0,0,lowq), upper = c(Inf, Inf, highq), method = "L-BFGS-B")
if(opt$convergence | sqrt(opt$value) > 0.001){
stop(paste('Distributional parameters may be invalid, or very extreme.',
'    Sometimes, though the parameters satisfy:',
'        median lowq < median < highq',
'    and',
'        0 < lowp < 0.5 < highp < 1',
'    these parameters can imply a distribution which is extremely',
'    (or impossibly) left or right skewed.',sep = '\n'))
}
list(min = lowq - opt$par[1], max = highq + opt$par[2], mode = opt$par[3])
}
dpert_alt(x = (-1000:4000)/1000, lowq = 1, highq = 3, lowp = 0.05, highp = 0.95, median = 2.445) %>% plot((-1000:4000)/1000,.)
getPertMinMaxFromQuant <- function(mode, lowq, highq,
lowp = 0.05, highp = 0.95,
shape = 4){
if(lowq > highq){
stop('Invalid distributional parameters. Arguments must satisfy lowq < highq')
}
if(lowp > highp || lowp < 0 || highp > 1){
stop('Invalid distributional parameters. Arguments must satisfy  0 < lowp < highp < 1')
}
f <- function(x){
sum((qpert(c(lowp, highp), min = lowq - x[1], max = highq + x[2], mode = mode, shape = shape) - c(lowq, highq))^2)
}
opt <- optim(c(1, 1), f , lower = 0, method = "L-BFGS-B")
if(opt$convergence | sqrt(opt$value) > 0.001){
stop(paste('Distributional parameters may be invalid, or very extreme.',
'    Sometimes, though the parameters satisfy:',
'        median lowq < highq',
'    and',
'        0 < lowp < highp < 1',
'    these parameters can imply a distribution which is extremely',
'    (or impossibly) left or right skewed.',sep = '\n'))
}
list(min = lowq - opt$par[1], max = highq + opt$par[2])
}
getPertMinMaxModeFromQuant <- function(median, lowq, highq,
lowp = 0.05, highp = 0.95,
shape = 4){
if(lowq > median || highq < median || lowq > highq){
stop('Invalid distributional parameters. Arguments must satisfy lowq < median < highq')
}
if(lowp > 0.5 || highp < 0.5 || lowp > highp || lowp < 0 || highp > 1){
stop('Invalid distributional parameters. Arguments must satisfy 0 < lowp < 0.5 < highp < 1')
}
f <- function(x){
sum((qpert(c(lowp, 0.5, highp), min = lowq - x[1], max = highq + x[2], mode = x[3], shape = shape) - c(lowq, median, highq))^2)
}
opt <- optim(c(1, 1,0), f , lower = c(0,0,lowq), upper = c(Inf, Inf, highq), method = "L-BFGS-B")
if(opt$convergence | sqrt(opt$value) > 0.001){
stop(paste('Distributional parameters may be invalid, or very extreme.',
'    Sometimes, though the parameters satisfy:',
'        median lowq < median < highq',
'    and',
'        0 < lowp < 0.5 < highp < 1',
'    these parameters can imply a distribution which is extremely',
'    (or impossibly) left or right skewed.',sep = '\n'))
}
list(min = lowq - opt$par[1], max = highq + opt$par[2], mode = opt$par[3])
}
getPertMinMaxFromQuant(lowq = 1, mode = 2, highq = 3)
getPertMinMaxFromQuant(lowq = 1, mode = 2.9, highq = 3)
getPertMinMaxFromQuant(lowq = 1, mode = 3.1, highq = 3)
getPertMinMaxFromQuant(lowq = 1, mode = 3, highq = 3)
getPertMinMaxFromQuant(lowq = 1, mode = 3.01, highq = 3)
getPertMinMaxFromQuant(lowq = 1, mode = 3.05, highq = 3)
getPertMinMaxFromQuant(lowq = 1, mode = 3.03, highq = 3)
getPertMinMaxFromQuant <- function(mode, lowq, highq,
lowp = 0.05, highp = 0.95,
shape = 4){
if(lowq > mode || highq < mode || lowq > highq){
stop('Invalid distributional parameters. Arguments must satisfy lowq < mode < highq')
}
if(lowp > highp || lowp < 0 || highp > 1){
stop('Invalid distributional parameters. Arguments must satisfy  0 < lowp < highp < 1')
}
f <- function(x){
sum((qpert(c(lowp, highp), min = lowq - x[1], max = highq + x[2], mode = mode, shape = shape) - c(lowq, highq))^2)
}
opt <- optim(c(1, 1), f , lower = 0, method = "L-BFGS-B")
if(opt$convergence | sqrt(opt$value) > 0.001){
stop(paste('Distributional parameters may be invalid, or very extreme.',
'    Sometimes, though the parameters satisfy:',
'        lowq < mode < highq',
'    and',
'        0 < lowp < highp < 1',
'    these parameters can imply a distribution which is extremely',
'    (or impossibly) left or right skewed.',sep = '\n'))
}
list(min = lowq - opt$par[1], max = highq + opt$par[2])
}
getPertMinMaxModeFromQuant <- function(median, lowq, highq,
lowp = 0.05, highp = 0.95,
shape = 4){
if(lowq > median || highq < median || lowq > highq){
stop('Invalid distributional parameters. Arguments must satisfy lowq < median < highq')
}
if(lowp > 0.5 || highp < 0.5 || lowp > highp || lowp < 0 || highp > 1){
stop('Invalid distributional parameters. Arguments must satisfy 0 < lowp < 0.5 < highp < 1')
}
f <- function(x){
sum((qpert(c(lowp, 0.5, highp), min = lowq - x[1], max = highq + x[2], mode = x[3], shape = shape) - c(lowq, median, highq))^2)
}
opt <- optim(c(1, 1,0), f , lower = c(0,0,lowq), upper = c(Inf, Inf, highq), method = "L-BFGS-B")
if(opt$convergence | sqrt(opt$value) > 0.001){
stop(paste('Distributional parameters may be invalid, or very extreme.',
'    Sometimes, though the parameters satisfy:',
'        lowq < median < highq',
'    and',
'        0 < lowp < 0.5 < highp < 1',
'    these parameters can imply a distribution which is extremely',
'    (or impossibly) left or right skewed.',sep = '\n'))
}
list(min = lowq - opt$par[1], max = highq + opt$par[2], mode = opt$par[3])
}
getPertMinMaxFromQuant(lowq = 1, mode = 3.03, highq = 3)
getPertMinMaxFromQuant(lowq = 1, mode = 3, highq = 3)
getPertMinMaxFromQuant(lowq = 1, mode = 3, highq = 3)
paste0("A02.",1:9)
c()
foodborne = list(type = "rpert_alt",
params = list(lowq = 0.05,
mode = 0.18,
highq = 0.35,
lowp = 0.05,
highp = 0.95))
foodborne
rdist <- function(type,...){
list(type, params = list(...))
}
rdist("rpert", a = 1, b = 2, c = 3)
rdist("rpert", min = 1, mode = 2, max() = 3)
rdist("rpert", min = 1, mode = 2, max= 3)
draw(rdist("rpert", min = 1, mode = 2, max= 3),100)
rdist <- function(type,...){
list(type = type, params = list(...))
}
draw(rdist("rpert", min = 1, mode = 2, max= 3),100)
