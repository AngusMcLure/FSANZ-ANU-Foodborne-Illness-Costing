subset(Pathogen != 'All pathogens') %>%
mutate(median = if_else(Measure == 'Cases', median/1000,
if_else(Measure == "Cost", median/1000000, median))) %>%
mutate(Measure = recode(Measure,
Cases = 'Cases (thousands)',
Cost = 'Cost (millions AUD)')) %>%
mutate(Measure = factor(Measure, levels = c('Cases (thousands)', 'Hospitalisations', "Deaths",
'Cost (millions AUD)'))) %>%
ggplot(aes(x = Source,
y = median,
fill = Pathogen,
label = round(median/10^6))) +
geom_bar(stat = 'identity') +
xlab('Food product') +
ylab('') +
coord_flip() +
ggh4x::facet_grid2(SourceCat~Measure, scales = 'free',space = 'free_y', independent = 'x',switch = 'both') +
theme(legend.position = 'bottom', legend.direction = 'horizontal',
#legend.position = c(0.9,0.125),
strip.placement = 'outside',
strip.text.y = element_blank(),
strip.background.x = element_rect('white'))
P.EpiProp
ggsave(filename = 'AttributionReport/EpiBySourcePathogen.png',P.EpiProp, width = 11)
ggsave(filename = 'AttributionReport/EpiBySourcePathogen.png',P.EpiProp, width = 3300, height = 1787, units = 'px')
P.CostPropAlt <- CostList %>%
subset(Disease == "Initial and sequel disease" &
Agegroup == 'All ages' &
CostCategory == "TotalHumanCapital" &
Source != 'AllFood') %>%
mutate(PathogenCat = if_else(Pathogen == 'All pathogens', 'All Pathogens', "Individual Pathogens")) %>%
ggplot(aes(x = Pathogen,
y = median/10^6,
fill = Source,
label = round(median/10^6))) +
geom_bar(stat = 'identity') +
xlab('Pathogen') +
ylab('Annual cost (millions AUD)') +
coord_flip() +
ggh4x::facet_grid2(PathogenCat~., scales = 'free',space = 'free_y', independent = 'x',switch = 'both') +
theme(strip.placement = 'outside',
strip.text.y = element_blank())
P.CostPropAlt
ggsave(filename = 'AttributionReport/CostByPathogenSource.png',P.CostPropAlt)
ggsave(filename = 'AttributionReport/CostByPathogenSource.png',P.CostPropAlt, width = 1941, height = 1787, units = 'px')
CostPerCase <- CombinedSummaries %>% select(-c(`5%`,`95%`,Agegroup,SourceCat,Disease)) %>%
pivot_wider(names_from = Measure, values_from = median) %>%
mutate(`Cost per case (AUD)` = signif(Cost/Cases,3),
`Hospitalisations per million cases` = signif(Hospitalisations/Cases * 1000000,3),
`Deaths per million cases` = signif(Deaths/Cases * 1000000,3)) %>%
subset(Pathogen == "All pathogens") %>%
select(!c(Pathogen, Cost, Deaths, Hospitalisations)) %>%
arrange(`Cost per case (AUD)`)
CostPerCase %>% write.csv('AttributionReport/CostPerCaseByFood.csv')
textlist <- function(cl, conj = 'and', oxford = TRUE){
n <- length(cl)
if(n == 0) return(character(0))
else if(n == 1) return(as.character(cl))
else if(n == 2) return(paste(cl[1], conj, cl[2]))
else return(paste0(paste(cl[1:(n-1)], collapse = ', '), if(oxford){','}else{''},' ', conj, ' ', cl[n]))
}
textCountObj <- function(n, name, plural = NULL){
plural <- pluralize(name)
if(n == 1 || n == 'one'){return(paste(n, name))}
else{return(paste(n, plural))}
}
matchVerbNoun <- function(verb, noun){
if(is_plural(noun)){
return(pluralize(verb))
}else{
return(singularize(verb))
}
}
attribtionSentencesPathogen <- function(pathogen){
cl <- CostList %>% subset(Pathogen == pathogen &
Agegroup == 'All ages' &
CostCategory == "TotalHumanCapital" &
median != 0)
el <- EpiList %>% subset(Pathogen == pathogen &
Agegroup == 'All ages' &
median != 0)
InitDisease <- PathogenAssumptions[[pathogen]]$name
SequelDiseases <- names(PathogenAssumptions[[pathogen]]$sequelae)
TotalCost <- subset(cl, Source == 'AllFood' &
Disease == 'Initial and sequel disease')$median #not tidied until later as it is needed for calculation fractions
CasesInit <- subset(el, Source == 'AllFood' &
Measure == 'Cases' &
Disease == 'Initial')$median %>% tidyNumber(unit = 1, max.word = 21)
CasesSequel <- subset(el, Source == 'AllFood' &
Measure == 'Cases' &
Disease %in% SequelDiseases)$median %>% sum %>% tidyNumber(unit = 1, max.word = 21)
Hosp <- subset(el, Source == 'AllFood' &
Measure == 'Hospitalisations' &
Disease == 'Initial and sequel disease')$median %>% tidyNumber(unit = 1, max.word = 21)
Deaths <- subset(el, Source == 'AllFood' &
Measure == 'Deaths' &
Disease == 'Initial and sequel disease')$median %>% tidyNumber(unit = 1, max.word = 21)
SourceCosts <-  subset(cl, Disease == 'Initial and sequel disease' & Source != 'AllFood') %>% arrange(desc(median))
SourcesOrdered <- SourceCosts$Source
SourceCostsOrdered <- SourceCosts$median
SourcePropOrdered <- round(SourceCostsOrdered/TotalCost* 100)
SourceCostsOrdered <- SourceCostsOrdered %>% tidyNumber(unit = 10^6, round = FALSE)
TotalCost <- TotalCost %>% tidyNumber(unit = 10^6, round = FALSE)
LeadingSourceCases <- subset(el, Source == SourcesOrdered[1] &
Measure == 'Cases' &
Disease == 'Initial')$median %>% tidyNumber(unit = 1, max.word = 21)
LeadingSourceCasesSequel <- subset(el, Source == SourcesOrdered[1] &
Measure == 'Cases' &
Disease %in% SequelDiseases)$median %>% sum %>% tidyNumber(unit = 1, max.word = 21)
LeadingSourceHosp <- subset(el, Source == SourcesOrdered[1] &
Measure == 'Hospitalisations' &
Disease == 'Initial and sequel disease')$median %>% tidyNumber(unit = 1, max.word = 21)
LeadingSourceDeaths <- subset(el, Source == SourcesOrdered[1] &
Measure == 'Deaths' &
Disease == 'Initial and sequel disease')$median %>% tidyNumber(unit = 1, max.word = 21)
hasSequel <- length(SequelDiseases) > 0
str_glue(
'{pathogen} resulted in an annual cost of approximately {TotalCost} million
AUD circa 2019 arising from {CasesInit} cases of',
if(hasSequel){' initial '}else{' '},'illness, ',
if(hasSequel){'{CasesSequel} cases of sequel illness ({textlist(tolower(SequelDiseases),conj = "or")}), '}else{''},
'{Hosp} hospitalisations, and {textCountObj(Deaths, "death")}. {SourcesOrdered[1]}
{matchVerbNoun("was",SourcesOrdered[1])} the leading source ({SourcePropOrdered[1]}%)
with a total annual cost of {SourceCostsOrdered[1]} million AUD arising from
{LeadingSourceCases} cases of', if(hasSequel){' initial '}else{' '},'illness, ',
if(hasSequel){'{LeadingSourceCasesSequel} cases of sequel illness, '}else{''},
'{LeadingSourceHosp} hospitalisations, and {textCountObj(LeadingSourceDeaths, "death")}. The
next three most frequent sources were ',
textlist(glue('{tolower(SourcesOrdered[2:4])} ({SourcePropOrdered[2:4]}%)')), '.'
) %>%
gsub('\n',' ',., fixed = TRUE)
}
attributionSentencesSource <- function(){
cl <- CostList %>% subset(Agegroup == 'All ages' &
CostCategory == "TotalHumanCapital" &
median != 0)
el <- EpiList %>% subset(Measure == 'Cases' &
Agegroup == 'All ages'&
Disease == 'Initial' &
median != 0)
PathogenNames <- setdiff(unique(CostList$Pathogen), 'All pathogens')
TotalCost <- subset(cl, Disease == 'Initial and sequel disease' &
Pathogen == 'All pathogens' &
Source == 'AllFood')$median %>% tidyNumber(unit = 10^6, round = FALSE)
SourceCosts <-  subset(cl, Disease == 'Initial and sequel disease' &
Pathogen == 'All pathogens' &
Source != 'AllFood') %>% arrange(desc(median))
SourcesCostOrdered <- SourceCosts$Source
SourcesCostOrderedCosts <- SourceCosts$median %>% tidyNumber(unit = 10^6, round = FALSE)
LeadingSourceCosts <- subset(cl, Disease == 'Initial and sequel disease' &
Pathogen != 'All pathogens' &
Source == SourcesCostOrdered[1]) %>% arrange(desc(median))
PathogensCostOrdered <- LeadingSourceCosts$Pathogen
PathogensCostOrderedCosts <- LeadingSourceCosts$median %>% tidyNumber(unit = 10^6, round = FALSE)
## Sources by number of
TotalCases <- subset(el, Pathogen == 'All pathogens' &
Source == 'AllFood')$median %>% tidyNumber(unit = 1, max.word = 21)
SourceCases <-  subset(el, Pathogen == 'All pathogens' &
Source != 'AllFood') %>% arrange(desc(median))
SourcesCaseOrdered <- SourceCases$Source
SourcesCaseOrderedCases <- SourceCases$median %>% tidyNumber(unit = 1, max.word = 21)
LeadingSourceCases <- subset(el, Pathogen != 'All pathogens' &
Source == SourcesCaseOrdered[1]) %>% arrange(desc(median))
PathogensCaseOrdered <- LeadingSourceCases$Pathogen
PathogensCaseOrderedCases <- LeadingSourceCases$median %>% tidyNumber(unit = 1, max.word = 21)
str_glue(
textlist(glue('{PathogenNames}')),
' have an estimated annual burden of {TotalCases} cases and {TotalCost} million AUD.
Among the pathogens and food categories considered, {tolower(SourcesCostOrdered[1])}
{matchVerbNoun("was",SourcesCostOrdered[1])} associated with the greatest cost
of foodborne illness, with a total cost of {SourcesCostOrderedCosts[1]} million AUD.
Of this total, ',
textlist(glue('{PathogensCostOrderedCosts} million AUD was due to {PathogensCostOrdered}')),
'. The food category associated with the most cases of foodborne illness circa 2019
was', if(SourcesCaseOrdered[1] == SourcesCostOrdered[1]){' also '}else{' '},
'{tolower(SourcesCaseOrdered[1])}, with a total burden of {SourcesCaseOrderedCases[1]} cases. Of this total, ',
textlist(glue('{PathogensCaseOrderedCases} cases were due to {PathogensCaseOrdered}')),'.'
)%>%
gsub('\n',' ',., fixed = TRUE)
}
attributionSentencesSource() %>% write_lines('AttributionReport/PathogenAttributionSummariesText.txt',
sep = '\n\n')
CommonPathogens %>%
map(attribtionSentencesPathogen) %>%
write_lines('AttributionReport/PathogenAttributionSummariesText.txt',
sep = '\n\n', append = TRUE)
#Write Cost and Epi List summaries for further analysis -- e.g. could be used to build an interactive tool
write.csv(CostList, 'AttributionReport/AttrCostTable.csv')
write.csv(EpiList, 'AttributionReport/EpiCostTable.csv')
write.csv(EpiList, 'AttributionReport/EpiCostTable.csv')
CostList
CostList %>% subset(Agegroup == 'AllAges')
CostList %>% subset(Agegroup == 'All Ages')
CostList$Agegroup %>% unique
CostList %>% subset(Agegroup == 'All ages')
CostList %>% subset(Agegroup == 'All ages' & Pathogen == 'Non-typhoidal Salmonella')
CostList %>% subset(Agegroup == 'All ages' & Pathogen == 'Non-typhoidal Salmonella') %>% View
EpiList %>% subset(Agegroup == 'All ages' & Pathogen == 'Non-typhoidal Salmonella') %>% View
CostList %>% subset(Agegroup == 'All ages' & Pathogen == 'Non-typhoidal Salmonella') %>% View
EpiList %>% subset(Agegroup == 'All ages' & Pathogen == 'Non-typhoidal Salmonella') %>% View
EpiList %>% subset(Agegroup == 'All ages' & Pathogen == 'Non-typhoidal Salmonella' & Measure == 'Cases') %>% View
EpiList %>% subset(Agegroup == 'All ages' & Pathogen == 'Non-typhoidal Salmonella' & Measure == 'Cases' & Disease == 'Initial') %>% View
help(gamma)
help(dgamma)
rgamma(100,0,0)
# Make figures for the report
library(tidyverse)
library(plotly)
library(ggtext)
source("./RFiles/Distributions.R")
source("./RFiles/ClassDefinitions.R")
source("./RFiles/Diseases.R")
SequelaeNames <- names(SequelaeAssumptions)
CostSummaries.Detailed <- read.csv('./Outputs/CostTable.csv') %>%
#subset(CostItem %in% c('GPSpecialist','ED','Deaths','WTPOngoing','HumanCapital','Medications','Tests'))
mutate(CostItem = recode(CostItem,
GPSpecialist = 'GP and specialist vists',
ED = 'Emergency department visits',
Deaths = "Premature mortality",
WTP = "Pain and suffering",
HumanCapital = 'Non-fatal productivity losses'))
CostPerCase <- read.csv('./Outputs/CostPerCase.csv')
CostSummaries.Categorised <- read.csv('./Outputs/CostTableCategories.csv') %>%
subset(!(CostItem %in% c('FrictionLow', 'FrictionHigh','TotalFrictionHigh','TotalFrictionLow','TotalHumanCapital'))) %>%
subset(!(Pathogen %in% c('All gastro pathogens', 'All pathogens'))) %>%
subset(Disease != 'Initial and sequel disease') %>%
mutate(SequelOrInitial = if_else(Disease %in% SequelaeNames, 'Sequel disease(s)', 'Initial disease')) %>%
subset(AgeGroup == 'All ages') %>%
mutate(CostItem = recode(CostItem,
Deaths = "Premature Mortality",
HumanCapital = 'Non-fatal productivity losses'))
PathogenByCost <- CostSummaries.Detailed %>%
subset(!(Pathogen %in% c("All pathogens", "All gastro pathogens")) &
Disease == 'Initial and sequel disease' &
AgeGroup == 'All ages' &
CostItem == "TotalHumanCapital") %>%
with(Pathogen[order(median)])
CostTotals <- CostSummaries.Categorised %>%
mutate(Pathogen = Pathogen %>% factor(levels = PathogenByCost),
SequelOrInitial = forcats::fct_rev(SequelOrInitial)) %>%
group_by(CostItem, SequelOrInitial, Pathogen) %>%
summarise(`Annual cost (millions AUD)` = sum(median)/10^6)
CostTotalsOnly <- read.csv('./Outputs/CostTableCategories.csv') %>%
subset(Disease == 'Initial and sequel disease' &
CostItem == 'TotalHumanCapital' &
AgeGroup == 'All ages'&
!(Pathogen %in% c('All gastro pathogens', 'All pathogens'))) %>%
mutate(Cost = median/10^6) %>%
select(Pathogen, Cost) %>%
mutate(Pathogen = fct_reorder(Pathogen, Cost),
PathogenTidy = recode(Pathogen,
`Salmonella Typhi` = '*Salmonella<br />Typhi*',
Shigella = '*Shigella spp.*',
`Yersinia Enterocolitica` = '*Yersinia<br />Enterocolitica*',
`Toxoplasma gondii`  = "*Toxoplasma<br />gondii*",
`Listeria monocytogenes` = "*Listeria<br />monocytogenes*",
`Escherichia coli (Non-STEC)` = "*Escherichia coli*<br />(non-STEC)",
`Non-typhoidal Salmonella` = "Non-typhoidal<br />*Salmonella*",
`Campylobacter` = "*Campylobacter<br />spp.*"
))
P.CostProportions <-  CostTotals %>%
group_by(Pathogen) %>%
mutate(Proportion = `Annual cost (millions AUD)`/ sum(`Annual cost (millions AUD)`)) %>%
ggplot(aes(x = Pathogen, y = Proportion,
fill = CostItem,
alpha = SequelOrInitial,
pattern = SequelOrInitial
)) +
geom_bar(stat = 'identity',
position = 'stack',
color = 'black') +
scale_alpha_manual(values = c(`Initial disease` = 1, `Sequel disease(s)` = 0.5)) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
guides(fill = guide_legend(override.aes = list(pattern = "none"),
title = 'Cost category'),
alpha = guide_legend(title = 'Sequel vs initial')) +
coord_flip() +
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
text = element_text(size =  12),
legend.direction = 'horizontal') +
ylab('Proportion of cost\n')
P.CostProportions
legend <- P.CostProportions %>% get_legend %>% as_ggplot
library(ggpubr)
legend <- P.CostProportions %>% get_legend %>% as_ggplot
ggsave(legend, filename = 'Paper and Presentations/CostProportionsLegend.png',
height = 4/2.54, width = 24/2.54)
legend <- (P.CostProportions + theme(legend.direction = 'vertical')) %>% get_legend %>% as_ggplot
ggsave(legend, filename = 'Paper and Presentations/CostProportionsLegendVertical.png',
height = 6/2.54, width = 5.5/2.54)
ggsave(P.CostProportions + theme(legend.position = 'none'),
filename = 'Paper and Presentations/CostProportions.png',
height = 12/2.54, width = 7/2.54)
help("recode")
P.CostProportions <-  CostTotals %>%
group_by(Pathogen) %>%
mutate(Proportion = `Annual cost (millions AUD)`/ sum(`Annual cost (millions AUD)`),
Category = recode(Category,
Direct = 'Direct costs',
`Non-fatal productivity losses` = 'Lost Productivity',
`Pain and suffering` = 'Pain & Suffering',
`Premature mortality` = 'Premature Mortality')) %>%
ggplot(aes(x = Pathogen, y = Proportion,
fill = CostItem,
alpha = SequelOrInitial,
pattern = SequelOrInitial
)) +
geom_bar(stat = 'identity',
position = 'stack',
color = 'black') +
scale_alpha_manual(values = c(`Initial disease` = 1, `Sequel disease(s)` = 0.5)) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
guides(fill = guide_legend(override.aes = list(pattern = "none"),
title = 'Cost category'),
alpha = guide_legend(title = 'Sequel vs initial')) +
coord_flip() +
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
text = element_text(size =  12),
legend.direction = 'horizontal') +
ylab('Proportion of cost\n')
P.CostProportions <-  CostTotals %>%
group_by(Pathogen) %>%
mutate(Proportion = `Annual cost (millions AUD)`/ sum(`Annual cost (millions AUD)`),
CostItem = recode(CostItem,
Direct = 'Direct costs',
`Non-fatal productivity losses` = 'Lost Productivity',
`Pain and suffering` = 'Pain & Suffering',
`Premature mortality` = 'Premature Mortality')) %>%
ggplot(aes(x = Pathogen, y = Proportion,
fill = CostItem,
alpha = SequelOrInitial,
pattern = SequelOrInitial
)) +
geom_bar(stat = 'identity',
position = 'stack',
color = 'black') +
scale_alpha_manual(values = c(`Initial disease` = 1, `Sequel disease(s)` = 0.5)) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
guides(fill = guide_legend(override.aes = list(pattern = "none"),
title = 'Cost category'),
alpha = guide_legend(title = 'Sequel vs initial')) +
coord_flip() +
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
text = element_text(size =  12),
legend.direction = 'horizontal') +
ylab('Proportion of cost\n')
P.CostProportions
library(ggpubr)
legend <- P.CostProportions %>% get_legend %>% as_ggplot
ggsave(legend, filename = 'Paper and Presentations/CostProportionsLegend.png',
height = 4/2.54, width = 24/2.54)
legend <- (P.CostProportions + theme(legend.direction = 'vertical')) %>% get_legend %>% as_ggplot
ggsave(legend, filename = 'Paper and Presentations/CostProportionsLegendVertical.png',
height = 6/2.54, width = 5.5/2.54)
ggsave(P.CostProportions + theme(legend.position = 'none'),
filename = 'Paper and Presentations/CostProportions.png',
height = 12/2.54, width = 7/2.54)
P.CostProportions <-  CostTotals %>%
group_by(Pathogen) %>%
mutate(Proportion = `Annual cost (millions AUD)`/ sum(`Annual cost (millions AUD)`),
CostItem = recode(CostItem,
Direct = 'Direct Costs',
`Non-fatal productivity losses` = 'Lost Productivity',
`Pain and suffering` = 'Pain & Suffering',
`Premature mortality` = 'Premature Mortality'),
SequelOrInitial = recode(SequelOrInitial,
`Initial disease` = 'Initial Disease',
`Sequel disease(s)` = 'Sequel Disease(s)')) %>%
ggplot(aes(x = Pathogen, y = Proportion,
fill = CostItem,
alpha = SequelOrInitial,
pattern = SequelOrInitial
)) +
geom_bar(stat = 'identity',
position = 'stack',
color = 'black') +
scale_alpha_manual(values = c(`Initial disease` = 1, `Sequel disease(s)` = 0.5)) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
guides(fill = guide_legend(override.aes = list(pattern = "none"),
title = 'Cost category'),
alpha = guide_legend(title = 'Sequel vs initial')) +
coord_flip() +
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
text = element_text(size =  12),
legend.direction = 'horizontal') +
ylab('Proportion of cost\n')
P.CostProportions
library(ggpubr)
legend <- P.CostProportions %>% get_legend %>% as_ggplot
ggsave(legend, filename = 'Paper and Presentations/CostProportionsLegend.png',
height = 4/2.54, width = 24/2.54)
legend <- (P.CostProportions + theme(legend.direction = 'vertical')) %>% get_legend %>% as_ggplot
ggsave(legend, filename = 'Paper and Presentations/CostProportionsLegendVertical.png',
height = 6/2.54, width = 5.5/2.54)
ggsave(P.CostProportions + theme(legend.position = 'none'),
filename = 'Paper and Presentations/CostProportions.png',
height = 12/2.54, width = 7/2.54)
P.CostProportions <-  CostTotals %>%
group_by(Pathogen) %>%
mutate(Proportion = `Annual cost (millions AUD)`/ sum(`Annual cost (millions AUD)`),
CostItem = recode(CostItem,
Direct = 'Direct Costs',
`Non-fatal productivity losses` = 'Lost Productivity',
`Pain and suffering` = 'Pain & Suffering',
`Premature mortality` = 'Premature Mortality'),
SequelOrInitial = recode(SequelOrInitial,
`Initial disease` = 'Initial Disease',
`Sequel disease(s)` = 'Sequel Disease(s)')) %>%
ggplot(aes(x = Pathogen, y = Proportion,
fill = CostItem,
alpha = SequelOrInitial,
pattern = SequelOrInitial
)) +
geom_bar(stat = 'identity',
position = 'stack',
color = 'black') +
scale_alpha_manual(values = c(`Initial disease` = 1, `Sequel disease(s)` = 0.5)) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
guides(fill = guide_legend(override.aes = list(pattern = "none"),
title = 'Cost category'),
alpha = guide_legend(title = 'Sequel vs initial')) +
coord_flip() +
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
text = element_text(size =  12),
legend.direction = 'horizontal') +
ylab('Proportion of cost\n')
P.CostProportions
CostTotals$SequelOrInitial %>% unique
P.CostProportions <-  CostTotals %>%
group_by(Pathogen) %>%
mutate(Proportion = `Annual cost (millions AUD)`/ sum(`Annual cost (millions AUD)`),
CostItem = recode(CostItem,
Direct = 'Direct Costs',
`Non-fatal productivity losses` = 'Lost Productivity',
`Pain and suffering` = 'Pain & Suffering',
`Premature mortality` = 'Premature Mortality'),
SequelOrInitial = recode(SequelOrInitial,
`Initial disease` = 'Initial Disease',
`Sequel disease(s)` = 'Sequel Disease(s)')) %>%
ggplot(aes(x = Pathogen, y = Proportion,
fill = CostItem,
alpha = SequelOrInitial,
pattern = SequelOrInitial
)) +
geom_bar(stat = 'identity',
position = 'stack',
color = 'black') +
scale_alpha_manual(values = c(`Initial disease` = 1, `Sequel disease(s)` = 0.5)) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
guides(fill = guide_legend(override.aes = list(pattern = "none"),
title = 'Cost category'),
alpha = guide_legend(title = 'Sequel vs initial')) +
coord_flip() +
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
text = element_text(size =  12),
legend.direction = 'horizontal') +
ylab('Proportion of cost\n')
P.CostProportions
P.CostProportions <-  CostTotals %>%
group_by(Pathogen) %>%
mutate(Proportion = `Annual cost (millions AUD)`/ sum(`Annual cost (millions AUD)`),
CostItem = recode(CostItem,
Direct = 'Direct Costs',
`Non-fatal productivity losses` = 'Lost Productivity',
`Pain and suffering` = 'Pain & Suffering',
`Premature mortality` = 'Premature Mortality'),
SequelOrInitial = recode(SequelOrInitial,
`Initial disease` = 'Initial Disease',
`Sequel disease(s)` = 'Sequel Disease(s)')) %>%
ggplot(aes(x = Pathogen, y = Proportion,
fill = CostItem,
alpha = SequelOrInitial,
pattern = SequelOrInitial
)) +
geom_bar(stat = 'identity',
position = 'stack',
color = 'black') +
scale_alpha_manual(values = c(`Initial Disease` = 1, `Sequel Disease(s)` = 0.5)) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
guides(fill = guide_legend(override.aes = list(pattern = "none"),
title = 'Cost Category'),
alpha = guide_legend(title = 'Sequel vs Initial')) +
coord_flip() +
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
text = element_text(size =  12),
legend.direction = 'horizontal') +
ylab('Proportion of cost\n')
P.CostProportions
library(ggpubr)
legend <- P.CostProportions %>% get_legend %>% as_ggplot
ggsave(legend, filename = 'Paper and Presentations/CostProportionsLegend.png',
height = 4/2.54, width = 24/2.54)
legend <- (P.CostProportions + theme(legend.direction = 'vertical')) %>% get_legend %>% as_ggplot
ggsave(legend, filename = 'Paper and Presentations/CostProportionsLegendVertical.png',
height = 6/2.54, width = 5.5/2.54)
ggsave(P.CostProportions + theme(legend.position = 'none'),
filename = 'Paper and Presentations/CostProportions.png',
height = 12/2.54, width = 7/2.54)
