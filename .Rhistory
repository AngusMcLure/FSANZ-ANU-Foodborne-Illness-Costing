names(ageGroups) <- ageGroups
# Adjust to target year
PopInTargetYear <- subset(AusPopAgegroup, Year == year)
Deaths <- map(diseases,function(.d){
map(ageGroups,function(.a){
dths <- subset(Deaths,Cause %in% .d$mortCodes & AgeGroup == .a)
#rgamma(ndraws, sum(dths$Count) + 0.5, dths$PersonYears[1]) * subset(PopInTargetYear, AgeGroup == .a)$Population *
out <- rbeta(ndraws, sum(dths$Count) + 0.5, dths$PersonYears[1] - sum(dths$Count) + 0.5) *
subset(PopInTargetYear, AgeGroup == .a)$Persons *
draw(.d$underdiagnosis,ndraws) *
draw(.d$foodborne,ndraws)
if(.d$caseMethod != "GastroFraction"){
out <- out * draw(.d$domestic,ndraws)
}
if(.d$kind == 'sequel'){
sf <- SequelaeFractions %>% subset(Disease == .d$name & AgeGroup == .a) %>% select(-c(Draw, AgeGroup,Disease))
out <- as.list(out * sf)
}
out
})
})
return(Deaths)
}
makeHospList <- function(year, diseases, incidenceList, ndraws = 10^6){
ageGroups <- c("<5","5-64","65+")
names(ageGroups) <- ageGroups
InitialCases <- incidenceList$Initial
SequelCases <- incidenceList$Sequel
Hosp <- list()
Hosp$Initial <- imap(InitialCases, ~{
.d <- diseases[[.y]]
imap(.x,function(cases,.a){
if(.d$hospMethod == 'AllCases'){return(cases)}
else if(.d$hospMethod == 'AIHW'){
sep <- sum(subset(Hospitalisations, DC4D %in% .d$hospCodes & AgeGroup == .a & FYNumeric == year)$Separations)
return(estimateHosp(.d,ndraws = ndraws,separations = sep))
}else  stop('I have not implemented this method of estiamting intitial disease hospitalisations')
})
})
Hosp$Sequel <- imap(SequelCases, ~{
initialDiseaseName <- .y
imap(.x,function(caseList,.a){
imap(caseList, function(cases, .sequeld){
.sequeld <- diseases[[.sequeld]]
if(.sequeld$hospMethod == 'AIHW'){
out <- sum(subset(Hospitalisations,DC4D %in% .sequeld$hospCodes & AgeGroup == .a & FYNumeric == year)$Separations)
sf <-  subset(SequelaeFractions,Disease == .sequeld$name & AgeGroup == .a)[[initialDiseaseName]]
return(estimateHosp(.sequeld,ndraws = ndraws,separations = out) *sf)
}else if(.sequeld$hospMethod == 'AllCases'){
return(cases)
}else {stop('Have not implemented hospitalisation estimation method called ', .sequeld$hospMethod)}
})
})
})
Hosp
}
warning('Friction costs assume time off is below the 3 month cap!')
estimateCosts <- function(disease, year, ageGroup, ndraws = 10^6,
notifications = NULL, separations = NULL, deaths = NULL,
discount){
d <- disease
a <- ageGroup
if(is.null(notifications)){
notifications <- subset(NNDSSIncidenceAgegroup,Year == year & AgeGroup == ageGroup & Disease == d$name)$Cases
incidencePrimary <- IncidenceList$Initial[[d$name]][[a]]
incidenceSequelae <- IncidenceList$Sequel[[d$name]][[a]]
}else{
incidencePrimary <- estimateIncidence(d, notifications = notifications, ndraws = ndraws)#$Foodborne
incidenceSequelae <- estimateSequelae(d,incidence = incidencePrimary, ndraws = ndraws)
}
incidence <- c(list(incidencePrimary),incidenceSequelae)
names(incidence)[1] <- d$name
dList <- c(list(d),
SequelaeAssumptions[names(d$sequelae)])
names(dList)[1] <- d$name
if(is.null(separations)){
separations <- map(dList,~{
if(.x$kind == "sequel") HospList[['Sequel']][[d$name]][[ageGroup]][[.x$name]]
else HospList[['Initial']][[d$name]][[ageGroup]]
}
)
}
if(is.null(deaths)){
deaths <- map(dList,~{
out <- DeathList[[.x$name]][[a]]
if(.x$kind == "sequel"){
out <- out[[d$name]]
}
out
}
)
}
out <- pmap(list(dList,incidence,separations,deaths),~{
GP <- estimateGeneric(..1["gp"],ndraws = ndraws, incidence = ..2)
Specialist <- estimateGeneric(..1["specialist"],ndraws = ndraws,
incidence = switch(..1$specialistToWhom,
Cases = ..2,
Hospitalisations = ..3,
None = rep(0,ndraws)))
Physio <- if(!is.null(..1$physio)){
estimateGeneric(..1["physio"],ndraws = ndraws,incidence = ..2)
}else{ list(physio = rep(0,ndraws))}
GPSpecialist <- list(gpShort = GP$gp * (1-..1$gpFracLong),
gpLong = GP$gp * ..1$gpFracLong,
physio = Physio$physio,
specialist = Specialist$specialist)
ED <- estimateGeneric(..1["ed"],ndraws = ndraws, incidence = ..2)
Meds <- estimateMeds(..1, ageGroup = a,
incidence = switch(..1$medicationsToWhom,
GP = GP$gp,
Cases = ..2,
Notifications = notifications,
None = rep(0,ndraws)),
ndraws = ndraws)
Tests <- estimateTests(..1, ageGroup = a,
incidence = switch(..1$testsToWhom,
GP = GP$gp,
Cases = ..2,
Notifications = notifications,
None = rep(0,ndraws)),
ndraws=ndraws)
HumanCapital <- costHumanCapital(year, ..1, a, ..2, ..3, ndraws = ndraws)
FrictionHigh <- HumanCapital * FrictionRates$High
FrictionLow <- HumanCapital * FrictionRates$Low
WTP = costWTP(..1,a,cases = ..2, separations = ..3,discount = discount, ndraws = ndraws)
out <- list(GP = costList(GPSpecialist),
ED = costList(ED),
Medications = costList(Meds),
Tests = costList(Tests),
Hospitalisation = ..3 * Costs[..1$DRGCodes[[a]],"Cost"],
Deaths = VSL * ..4,
WTP = WTP$FirstYear,
WTPOngoing = WTP$Ongoing,
HumanCapital = HumanCapital,
FrictionHigh = FrictionHigh,
FrictionLow = FrictionLow)
map(out, ~{if(length(.x) == 0){rep(0, ndraws)}else{.x}})
}
)
out
}
makeCostList <- function(year,
diseases,
ndraws = 10^6,
discount){
AgeGroups <- c("<5","5-64","65+")
names(AgeGroups) <- c("<5","5-64", "65+")
map(diseases, function(.d){
map(AgeGroups, function(.a){
estimateCosts(.d,year,.a,ndraws = ndraws, discount = discount)
})
})
}
CostList <- makeCostList(2019, DiseaseAssumptions[WorkingDiseases], ndraws, discount = 0) # no discounting and assuming a 5 year duration of ongoing illness is equivalent to the cross-sectional approach if we assume that case numbers were the same over the past five years.
CostTableCategories
#Summarise draws with median, and 90 CIs
# Can probably reuse some code here...
IncidenceTable <- IncidenceList %>% as.data.frame(check.names = F) %>%
mutate(Draw = row.names(.)) %>%
pivot_longer(-Draw, names_sep = "\\.",
names_to = c("Kind","Pathogen", "AgeGroup", "Disease")) %>%
mutate(Disease = if_else(is.na(Disease), Pathogen, Disease)) %>%
bind_rows(.,
group_by(.,Draw, Pathogen, Disease) %>%
summarise(value = sum(value)) %>%
mutate(AgeGroup = 'All Ages')) %>%
bind_rows(.,
group_by(.,Draw, Pathogen, AgeGroup) %>%
summarise(value = sum(value)) %>%
mutate(Disease = 'All Diseases')) %>%
bind_rows(.,
group_by(.,Draw, AgeGroup, Disease) %>%
summarise(value = sum(value)) %>%
mutate(Pathogen = 'All Pathogens')) %>%
group_by(Kind,Pathogen, AgeGroup, Disease) %>%
summarise(median = median(value),
`5%` = quantile(value, 0.05),
`95%` = quantile(value, 0.95))
HospTable <- HospList %>%
data.frame(check.names = F) %>%
mutate(Draw = row.names(.)) %>%
pivot_longer(-Draw, names_sep = "\\.",
names_to = c("Kind","Pathogen", "AgeGroup", "Disease")) %>%
subset(!is.na(value)) %>%
mutate(Disease = if_else(is.na(Disease), Pathogen, Disease)) %>%
bind_rows(.,
group_by(.,Draw, Pathogen, Disease) %>%
summarise(value = sum(value)) %>%
mutate(AgeGroup = 'All Ages')) %>%
bind_rows(.,
group_by(.,Draw, Pathogen, AgeGroup) %>%
summarise(value = sum(value)) %>%
mutate(Disease = 'All Diseases')) %>%
bind_rows(.,
group_by(.,Draw, AgeGroup, Disease) %>%
summarise(value = sum(value)) %>%
mutate(Pathogen = 'All Pathogens')) %>%
group_by(Pathogen, AgeGroup, Disease) %>%
summarise(median = median(value),
`5%` = quantile(value, 0.05),
`95%` = quantile(value, 0.95))
DeathTable <- DeathList %>%
as.data.frame(check.names = F) %>%
mutate(Draw = row.names(.)) %>%
pivot_longer(-Draw, names_sep = "\\.",
names_to = c("Disease", "AgeGroup", "Pathogen")) %>%
subset(!is.na(value)) %>%
mutate(Pathogen = if_else(is.na(Pathogen), Disease, Pathogen)) %>%
bind_rows(.,
group_by(.,Draw, Pathogen, Disease) %>%
summarise(value = sum(value)) %>%
mutate(AgeGroup = 'All Ages')) %>%
bind_rows(.,
group_by(.,Draw, Pathogen, AgeGroup) %>%
summarise(value = sum(value)) %>%
mutate(Disease = 'All Diseases')) %>%
bind_rows(.,
group_by(.,Draw, AgeGroup, Disease) %>%
summarise(value = sum(value)) %>%
mutate(Pathogen = 'All Pathogens')) %>%
group_by(Pathogen, AgeGroup, Disease) %>%
summarise(median = median(value),
`5%` = quantile(value, 0.05),
`95%` = quantile(value, 0.95))
EpiTable <- bind_rows(Deaths = DeathTable, Hospitalisations = HospTable, Cases = IncidenceTable,.id = 'Measure') %>%
subset(!(Disease %in% names(DiseaseAssumptions) & Pathogen == 'All Pathogens'))
write.csv(EpiTable,'./R/EpiTable.csv')
CostListTotals <- CostList %>%
as.data.frame(check.names = F) %>%
mutate(Draw = row.names(.)) %>%
pivot_longer(-Draw, names_sep = "\\.",
names_to = c("Pathogen", "AgeGroup", "Disease","CostItem")) %>%
bind_rows(.,
group_by(.,Draw, Pathogen, Disease,CostItem) %>%
summarise(value = sum(value)) %>%
mutate(AgeGroup = 'All Ages')) %>%
bind_rows(.,
group_by(.,Draw, Pathogen, AgeGroup,CostItem) %>%
summarise(value = sum(value)) %>%
mutate(Disease = 'All Diseases')) %>%
bind_rows(.,
group_by(.,Draw, Disease, AgeGroup,CostItem) %>%
summarise(value = sum(value)) %>%
mutate(Pathogen = 'All Pathogens'))
CostTable <-  CostListTotals %>%
group_by(Pathogen, AgeGroup, Disease, CostItem) %>%
summarise(median = median(value),
`5%` = quantile(value, 0.05),
`95%` = quantile(value, 0.95))
write.csv(CostTable,'./R/CostTable.csv')
DirectCat <- c('GP','ED','Hospitalisation','Tests','Medications')
WTPCat <- c('WTP', 'WTPOngoing')
CostTableCategories <- CostListTotals %>%
group_by(Draw,Pathogen, AgeGroup, Disease) %>%
summarise(Direct = sum(value[CostItem %in% DirectCat]),
WTP = sum(value[CostItem %in% WTPCat]),
Deaths = value[CostItem == "Deaths"],
HumanCapital = value[CostItem == "HumanCapital"],
FrictionHigh = value[CostItem == "FrictionHigh"],
FrictionLow = value[CostItem == "FrictionLow"]) %>%
pivot_longer(Direct:FrictionLow,names_to = 'CostCategory', values_to = 'value') %>%
group_by(Pathogen, AgeGroup, Disease, CostCategory) %>%
summarise(median = median(value),
`5%` = quantile(value, 0.05),
`95%` = quantile(value, 0.95))
CostTableCategories
CostListTotals
CostListTotals %>%
group_by(Draw,Pathogen, AgeGroup, Disease) %>%
summarise(Direct = sum(value[CostItem %in% DirectCat]),
WTP = sum(value[CostItem %in% WTPCat]),
Deaths = value[CostItem == "Deaths"],
HumanCapital = value[CostItem == "HumanCapital"],
FrictionHigh = value[CostItem == "FrictionHigh"],
FrictionLow = value[CostItem == "FrictionLow"])
CostTableCategories <- CostListTotals %>%
group_by(Draw,Pathogen, AgeGroup, Disease) %>%
summarise(Direct = sum(value[CostItem %in% DirectCat]),
WTP = sum(value[CostItem %in% WTPCat]),
Deaths = value[CostItem == "Deaths"],
HumanCapital = value[CostItem == "HumanCapital"],
FrictionHigh = value[CostItem == "FrictionHigh"],
FrictionLow = value[CostItem == "FrictionLow"]) %>%
mutate(AllCat.HumanCapital = Direct + WTP + Deaths + HumanCapital,
AllCat.FrictionLow = Direct + WTP + Deaths + FrictionLow,
AllCat.FrictionHigh = Direct + WTP + Deaths + FrictionHigh) %>%
pivot_longer(Direct:FrictionLow,names_to = 'CostCategory', values_to = 'value') %>%
group_by(Pathogen, AgeGroup, Disease, CostCategory) %>%
summarise(median = median(value),
`5%` = quantile(value, 0.05),
`95%` = quantile(value, 0.95))
CostTableCategories <- CostListTotals %>%
group_by(Draw,Pathogen, AgeGroup, Disease) %>%
summarise(Direct = sum(value[CostItem %in% DirectCat]),
WTP = sum(value[CostItem %in% WTPCat]),
Deaths = value[CostItem == "Deaths"],
HumanCapital = value[CostItem == "HumanCapital"],
FrictionHigh = value[CostItem == "FrictionHigh"],
FrictionLow = value[CostItem == "FrictionLow"]) %>%
mutate(AllCat.HumanCapital = Direct + WTP + Deaths + HumanCapital,
AllCat.FrictionLow = Direct + WTP + Deaths + FrictionLow,
AllCat.FrictionHigh = Direct + WTP + Deaths + FrictionHigh) %>%
pivot_longer(Direct:AllCat.FrictionHigh,names_to = 'CostCategory', values_to = 'value') %>%
group_by(Pathogen, AgeGroup, Disease, CostCategory) %>%
summarise(median = median(value),
`5%` = quantile(value, 0.05),
`95%` = quantile(value, 0.95))
CostTableCategories
paste0('AllCat.',"a")
paste0(c('AllCat.',"a"))
print(CostCategories)
library(DT)
library(shiny)
library(tidyverse)
#setwd("R")
CostTable <- read.csv("CostTable.csv") %>%
select(-X) %>%
mutate(across(c(X5.,X95.),~format(.x/10^3,big.mark = ",", scientific = FALSE, digits = 0)),
median = round(median/10^3, digits = 0)) %>%
mutate(`90% CI` = paste(X5.,X95.,sep = ' - ')) %>%
rename("Cost (thousands AUD)" = "median") %>%
select(Pathogen, Disease, AgeGroup, CostItem, `Cost (thousands AUD)`, `90% CI`) %>%
mutate(CostItem = recode(CostItem,
Deaths = "Premature mortality",
WTPOngoing = 'WTP-Ongoing',
FrictionLow = 'Friction-Low',
FrictionHigh = 'Friction-High',
HumanCapital = 'Human Capital'))
CostTableSummaries <- read.csv("CostTableCategories.csv") %>%
select(-X) %>%
mutate(across(c(X5.,X95.),~format(.x/10^3,big.mark = ",", scientific = FALSE, digits = 0)),
median = round(median/10^3, digits = 0)) %>%
mutate(`90% CI` = paste(X5.,X95.,sep = ' - ')) %>%
rename("Cost (thousands AUD)" = "median") %>%
select(Pathogen, Disease, AgeGroup, CostCategory, `Cost (thousands AUD)`, `90% CI`) %>%
mutate(CostCategory = recode(CostCategory,
Deaths = "Premature mortality",
FrictionLow = 'Friction-Low',
FrictionHigh = 'Friction-High',
HumanCapital = 'Human Capital',
AllCat.FrictionHigh = 'AllCat.Friction-High',
AllCat.FrictionLow = 'AllCat.Friction-Low',
AllCat.HumanCapital = 'AllCat.Human Capital'))
EpiTable <- read.csv('EpiTable.csv') %>%
select(-X) %>%
mutate(across(c(median,X5.,X95.),~round(.x,2))) %>%
mutate(`90% CI` = paste(X5.,X95.,sep = '-')) %>%
rename("Count" = "median") %>%
select(Pathogen, Disease, AgeGroup, Measure, Count, `90% CI`)
ProductivityOptions <- c("Human Capital", "Friction-High", "Friction-Low")
EpiMeasures <- unique(EpiTable$Measure)
Measures <- c(setdiff(unique(CostTable$CostItem),ProductivityOptions), "Lost Productivity")
PathogenNames <- c(setdiff(unique(EpiTable$Pathogen), "All Pathogens"),"All Pathogens")
Diseases <- unique(EpiTable$Disease)
CostCategories <- c(setdiff(unique(CostTableSummaries$CostCategory), c(ProductivityOptions, paste0('AllCat.',ProductivityOptions))), "Lost Productivity", "Total")
print(CostCategories)
AgeGroups <- unique(EpiTable$AgeGroup)
ui <- fluidPage(
titlePanel("Cost of Foodborne Diseases in Australia"),
tabsetPanel(type = "pills",
tabPanel('Epi Summaries',
fluidRow(column(width = 3,
selectInput(
"Pathogen1",
"Pathogen",
PathogenNames,
selected = PathogenNames,
multiple = TRUE
)),
column(width = 3,
selectInput(
"Disease1",
"Disease",
Diseases,
selected = Diseases,
multiple = TRUE
)),
column(width = 3,
selectInput(
"AgeGroups1",
"AgeGroups",
AgeGroups,
selected = AgeGroups,
multiple = TRUE
)),
column(width = 3,
selectInput(
"EpiMeasures",
"Measure",
EpiMeasures,
selected = EpiMeasures,
multiple = TRUE
))
),
DT::dataTableOutput("EpiDT")),
tabPanel('Cost Summaries',
fluidRow(column(width = 3,
selectInput(
"Pathogen.Summary",
"Pathogen",
PathogenNames,
selected = PathogenNames[1],
multiple = FALSE
)),
column(width = 3,
selectInput(
"Disease.Summary",
"Disease",
Diseases,
selected = 'All Diseases',
multiple = FALSE
)),
column(width = 3,
selectInput(
"AgeGroup.Summary",
"Age group",
AgeGroups,
selected = 'All Ages',
multiple = FALSE
)),
column(width = 3,
selectInput(
"Productivity.Summary",
"Productivity Costs Method",
ProductivityOptions,
selected = "HumanCapital",
multiple = FALSE
))
),
DT::dataTableOutput("SummaryDT")),
tabPanel("Cost Comparisons",
fluidRow(column(width = 3,
selectInput(
"Pathogen",
"Pathogens",
PathogenNames,
selected = PathogenNames,
multiple = TRUE
)),
column(width = 3,
selectInput(
"Disease",
"Diseases",
Diseases,
selected = Diseases,
multiple = TRUE
)),
column(width = 3,
selectInput(
"AgeGroups",
"Age groups",
AgeGroups,
selected = AgeGroups,
multiple = TRUE
)),
column(width = 3,
selectInput(
"Measure",
"Cost Items",
Measures,
selected = Measures,
multiple = TRUE
))
),
fluidRow(column(width = 3,
selectInput(
"Productivity",
"Productivity Costs Method",
ProductivityOptions,
selected = "HumanCapital",
multiple = FALSE
))),
DT::dataTableOutput("ComparisonDT"))
)
)
server <- function(input, output) {
output$EpiDT = DT::renderDataTable({
EpiTable %>%
subset(Measure %in% input$EpiMeasures &
AgeGroup %in% input$AgeGroups1 &
Pathogen %in% input$Pathogen1 &
Disease %in% input$Disease1)
}, rownames = FALSE)
output$SummaryDT = DT::renderDataTable({
CostTableSummaries %>%
mutate(`Cost Category` = if_else(CostCategory == input$Productivity.Summary,
'Lost Productivity',
if_else(CostCategory == paste0('AllCat.',input$Productivity.Summary),
'Total', CostCategory))) %>%
subset(`Cost Category` %in% CostCategories &
AgeGroup == input$AgeGroup.Summary &
Pathogen == input$Pathogen.Summary &
Disease == input$Disease.Summary) %>%
select(`Cost Category`, `Cost (thousands AUD)`,`90% CI`) %>%
DT::datatable() %>%
DT::formatCurrency(columns = "Cost (thousands AUD)", currency = "", interval = 3, mark = ",", digits = 0)
}, rownames = FALSE)
output$ComparisonDT = DT::renderDataTable({
CostTable %>%
mutate(CostItem = if_else(CostItem == input$Productivity,'Lost Productivity',CostItem)) %>%
subset(CostItem %in% input$Measure &
AgeGroup %in% input$AgeGroups &
Pathogen %in% input$Pathogen &
Disease %in% input$Disease) %>%
rename(`Age group` = AgeGroup,
`Cost Item` = CostItem) %>%
DT::datatable() %>%
DT::formatCurrency(columns = "Cost (thousands AUD)", currency = "", interval = 3, mark = ",", digits = 0)
}, rownames = FALSE)
}
shinyApp(ui, server)
write.csv(CostTableCategories,'./R/CostTableCategories.csv')
